{"version":3,"sources":["const.js","components/user/user.jsx","store/action.js","helpers/sort.js","helpers/statistic.js","helpers/flights.js","helpers/adapter.js","store/reducers/flights/flights.js","store/reducers/statistic/statistic.js","store/reducers/root.js","components/next-flight/next-flight.jsx","components/accordion-container/accordion-container.jsx","store/selectors.js","components/toggle/toggle.jsx","components/select/select.js","components/chart/chart.jsx","components/flight-statistic/flight-statistic.jsx","components/show-chart-btn/show-chart-btn.jsx","components/simple-breadcrumbs/simple-breadcrumbs.jsx","components/no-planned-flights/no-planned-flights.jsx","components/main-page/main-page.jsx","components/details-table/details-table.jsx","components/collapsible-table-row/collabsible-table-row.jsx","components/collapsible-table/collapsible-table.jsx","components/details-page/details-page.jsx","components/app/app.jsx","api/api.js","index.jsx","store/api-actions.js"],"names":["AppRoute","StatisticType","months","APIRoute","useStyles","makeStyles","root","marginBottom","userName","color","fontWeight","userMail","User","classes","matches","useMediaQuery","Grid","container","spacing","wrap","alignContent","item","className","style","margin","Avatar","alt","width","height","src","alignItems","Typography","variant","ActionType","ActionCreator","flights","type","payload","filter","interval","sortByDate","flightA","flightB","dateFlight","Interval","MONTH","date","getMonth","YEAR","getFullYear","groupByYears","statisticType","reduce","result","flight","year","push","groupByMonths","flightsByYears","Month","month","MonthMap","filterByPlanned","convertToChartData","years","Object","keys","statisticByYears","yearStatistic","time","timeFlight","timeWork","timeBlock","timeNight","timeBiologicalNight","name","statisticByMonths","monthStatistic","getGroupedData","convertSecToHours","sec","Math","floor","getNextFlight","filteredPlannedFlights","length","currentDate","Date","flightsByMonths","dayX","sort","slice","findNextFlight","adaptServerToClient","initialState","isFlightsLoaded","nextFlight","flightNumber","plnType","pln","isNextFlightFinded","noNextFlight","statsByInterval","actualTimeBiologicalNight","actualTimeBlock","actualTimeFlight","actualTimeNight","actualTimeWork","plannedTimeBiologicalNight","plannedTimeBlock","plannedTimeFlight","plannedTimeNight","plannedTimeWork","NameSpace","combineReducers","state","action","apdaptedFlights","map","grid","borderBottom","paddingBottom","card","boxShadow","media","maxWidth","backgroundSize","row","display","justifyContent","th","border","paddingLeft","paddingTop","td","paddingRight","createData","data","connect","dispatch","searchNextFlight","useState","flightData","setFlightData","useEffect","toLocaleTimeString","getDate","rows","Card","align","CardMedia","component","image","title","CardContent","padding","Table","TableBody","TableRow","TableCell","boxSizing","accordionItem","label","expandIcon","position","AccordionContainer","children","renderDetails","Accordion","AccordionSummary","aria-controls","id","AccordionDetails","getChartData","createSelector","filteredActualFlights","filterByActual","actualFlights","plannedFlights","actualChartData","plannedChartData","intervals","Set","forEach","add","statisctic","actualFlight","plannedFlight","getAllData","getYears","findYears","getFlightsForInterval","labelFont","fontSize","borderRadius","gridItem","flexBasis","flexGrow","BlueSwitch","withStyles","switchBase","checked","track","backgroundColor","Switch","Toggle","changeHandler","labels","leftLabel","rightLabel","checkedA","setState","Container","justify","textAlign","onChange","evt","target","inputProps","theme","formControl","minWidth","background","select","selectEmpty","marginTop","setFilter","FormControl","Select","labelId","value","defaultValue","i","MenuItem","times","chartData","toggleStatisticType","updateDetailsInterval","history","useHistory","isTimeToggled","setTimeToggle","isStatisticTypeToggled","setStatisticToggle","bootomGap","handleChangeToggle","useCallback","handleStatisticToggle","handleBarClick","minHeight","ResponsiveContainer","BarChart","left","right","CartesianGrid","strokeDasharray","Legend","wrapperStyle","layout","verticalAlign","XAxis","dataKey","YAxis","Bar","onClick","barSize","stackId","fill","FlightStatistic","button","textTransform","ShowMoreBtn","clickHandler","Button","SimpleBreadcrumbs","currentRoute","Breadcrumbs","aria-label","Link","href","preventDefault","NoPlannedFlights","header","main","flexDirection","isChartShowed","setChartShowStatus","handleShowChartBtnClick","Box","gutterBottom","direction","DetailsTable","mapFlightParam","from","fromLat","fromLong","to","toLat","toLong","Row","React","open","setOpen","rowKeys","Fragment","IconButton","size","scope","colSpan","Collapse","in","timeout","unmountOnExit","key","CollapsibleTable","takeoff","landing","toLocaleString","lat","long","generateRows","TableContainer","Paper","TableHead","flightsForInterval","actualDataRows","plannedDataRows","my","pl","App","createMuiTheme","overrides","MuiCssBaseline","body","palette","primary","secondary","text","default","typography","body1","body2","h5","ThemeProvider","CssBaseline","exact","path","render","props","Method","SuccessHTTPStatusRange","api","endPoint","this","_endPoint","url","_load","then","Api","toJSON","catch","err","console","log","method","headers","Headers","mode","fetch","checkStatus","response","status","Error","statusText","json","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","Promise","all","_getState","getFlights","document","getElementById"],"mappings":"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","file":"static/js/main.0429dc9f.chunk.js","sourcesContent":["export const AppRoute = {\n  MAIN: \"/\",\n  DETAILS: \"/details\",\n};\n\nexport const StatisticType = {\n  YEARS: \"YEARS\",\n  MONTHS: \"MONTHS\",\n};\n\nexport const months = [\n  \"JAN\",\n  \"FEB\",\n  \"MAR\",\n  \"APR\",\n  \"MAY\",\n  \"JUN\",\n  \"JUL\",\n  \"AUG\",\n  \"SEP\",\n  \"OCT\",\n  \"NOV\",\n  \"DEC\",\n];\n\nexport const APIRoute = {\n  FETCH_FLIGHTS: \"/flights\"\n};\n","import React from \"react\";\nimport { Typography, Avatar, Grid, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: \"13px\",\n  },\n  userName: {\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst User = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n\n  return (\n    <Grid\n      container\n      spacing={5}\n      wrap=\"nowrap\"\n      alignContent=\"space-between\"\n      item\n      className={classes.root}\n      style={matches ? {margin: \"29px 0\"} : null}\n    >\n      <Grid item>\n        <Avatar\n          alt=\"Sheldon Cooper\"\n          style={{ width: \"60px\", height: \"60px\" }}\n          src=\"./img/avatar.jpg\"\n        />\n      </Grid>\n      <Grid container alignItems=\"center\" item>\n        <Grid item>\n          <Typography className={classes.userName} variant=\"body1\">\n            Шелдон Купер\n          </Typography>\n          <Typography className={classes.userMail} variant=\"body2\">\n            sheldon.cooper@gmail.com\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default User;\n","export const ActionType = {\n  LOAD_FLIGHTS: \"LOAD_FLIGHTS\",\n  CHANGE_STATISTIC_TYPE: \"CHANGE_STATISTIC_TYPE\",\n  CHANGE_FILTER: \"CHANGE_FILTER\",\n  SEARCH_NEXT_FLIGHT: \"SEARCH_NEXT_FLIGHT\",\n  CHANGE_INTERVAL: \"CHANGE_INTERVAL\"\n};\n\nexport const ActionCreator = {\n  loadFlights: (flights) => ({\n    type: \"LOAD_FLIGHTS\",\n    payload: flights\n  }),\n  changeStatisticType: (type) => ({\n    type: \"CHANGE_STATISTIC_TYPE\",\n    payload: type\n  }),\n  changeFilter: (filter) => ({\n    type: \"CHANGE_FILTER\",\n    payload: filter\n  }),\n  setNextFlight: () => ({\n    type: \"SEARCH_NEXT_FLIGHT\",\n  }),\n  setDetailsInterval: (interval) => ({\n    type: \"CHANGE_INTERVAL\",\n    payload: interval\n  })\n};\n","export const sortByDate = (flightA, flightB) => {\n  if (flightA.dateFlight - flightB.dateFlight > 0) {\n    return 1;\n  }\n\n  if (flightA.dateFlight - flightB.dateFlight < 0) {\n    return -1;\n  }\n\n  return 0;\n};\n","import { StatisticType, months } from \"../const\";\n\nconst Interval = {\n  MONTH: (date) => date.getMonth(),\n  YEAR: (date) => date.getFullYear(),\n};\n\nexport const findYears = (flights) => {\n  const flightsByYears = groupByYears(flights, \"YEAR\");\n  const years = Object.keys(flightsByYears);\n  return years;\n};\n\nexport const groupByYears = (flights, statisticType) => {\n  return flights.reduce((result, flight) => {\n    const year = Interval[statisticType](flight.dateFlight);\n    result[year] = result[year] || [];\n    result[year].push(flight);\n    return result;\n  }, {});\n};\n\nexport const groupByMonths = (flightsByYears, statisticType, year) => {\n  const Month = months.reduce((result, month) => {\n    result[month] = [];\n    return result;\n  }, {});\n\n  if (!flightsByYears[year]) {\n    return Month;\n  }\n  return flightsByYears[year].reduce((MonthMap, flight) => {\n    const monthName = months[Interval[statisticType](flight.dateFlight)];\n    MonthMap[monthName].push(flight);\n\n    return MonthMap;\n  }, Month);\n};\n\nexport const filterByActual = (flights) =>\n  flights.filter((flight) => !flight.type);\nexport const filterByPlanned = (flights) =>\n  flights.filter((flight) => !!flight.type);\n\nexport const convertToChartData = (flights, statisticType, filter) => {\n  const years = Object.keys(flights);\n  switch (statisticType) {\n    case StatisticType.YEARS:\n      return years.reduce((statisticByYears, year) => {\n        const yearStatistic = flights[year].reduce(\n          (time, flight) => {\n            time.timeFlight += flight.timeFlight || 0;\n            time.timeWork += flight.timeWork || 0;\n            time.timeBlock += flight.timeBlock || 0;\n            time.timeNight += flight.timeNight || 0;\n            time.timeBiologicalNight += flight.timeBiologicalNight || 0;\n            return time;\n          },\n          {\n            timeFlight: 0,\n            timeWork: 0,\n            timeBlock: 0,\n            timeNight: 0,\n            timeBiologicalNight: 0,\n            name: year,\n            interval: year,\n          }\n        );\n\n        statisticByYears.push(yearStatistic);\n        return statisticByYears;\n      }, []);\n\n    case StatisticType.MONTHS:\n      return months.reduce((statisticByMonths, month) => {\n        const monthStatistic = flights[month].reduce(\n          (time, flight) => {\n            time.timeFlight += flight.timeFlight || 0;\n            time.timeWork += flight.timeWork || 0;\n            time.timeBlock += flight.timeBlock || 0;\n            time.timeNight += flight.timeNight || 0;\n            time.timeBiologicalNight += flight.timeBiologicalNight || 0;\n            return time;\n          },\n          {\n            timeFlight: 0,\n            timeWork: 0,\n            timeBlock: 0,\n            timeNight: 0,\n            timeBiologicalNight: 0,\n            name: month,\n            interval: `${month} ${filter}`,\n          }\n        );\n        statisticByMonths.push(monthStatistic);\n        return statisticByMonths;\n      }, []);\n\n    default:\n      return flights;\n  }\n};\n\nexport const getGroupedData = (flights, statisticType, filter) => {\n  const flightsByYears = groupByYears(flights, \"YEAR\");\n  const result =\n    statisticType === StatisticType.YEARS\n      ? flightsByYears\n      : groupByMonths(flightsByYears, \"MONTH\", filter);\n  return result;\n};\n\nconst convertSecToHours = (sec) => Math.floor(sec / 3600);\n\nexport const getAllData = (actualChartData, plannedChartData) => {\n  const intervals = new Set();\n  actualChartData.forEach((flight) => {\n    intervals.add(flight.name);\n  });\n  plannedChartData.forEach((flight) => {\n    intervals.add(flight.name);\n  });\n\n  const allData = [...intervals].reduce((result, interval) => {\n    const statisctic = {};\n    const actualFlight = actualChartData.filter(\n      (data) => data.name === interval\n    );\n    const plannedFlight = plannedChartData.filter(\n      (data) => data.name === interval\n    );\n    if (actualFlight.length) {\n      statisctic.actualTimeFlight = convertSecToHours(\n        actualFlight[0].timeFlight\n      );\n      statisctic.actualTimeWork = convertSecToHours(actualFlight[0].timeWork);\n      statisctic.actualTimeBlock = convertSecToHours(actualFlight[0].timeBlock);\n      statisctic.actualTimeNight = convertSecToHours(actualFlight[0].timeNight);\n      statisctic.actualTimeBiologicalNight = convertSecToHours(\n        actualFlight[0].timeBiologicalNight\n      );\n      statisctic.interval = actualFlight[0].interval;\n    }\n    if (plannedFlight.length) {\n      statisctic.plannedTimeFlight = convertSecToHours(\n        plannedFlight[0].timeFlight\n      );\n      statisctic.plannedTimeWork = convertSecToHours(plannedFlight[0].timeWork);\n      statisctic.plannedTimeBlock = convertSecToHours(\n        plannedFlight[0].timeBlock\n      );\n      statisctic.plannedTimeNight = convertSecToHours(\n        plannedFlight[0].timeNight\n      );\n      statisctic.plannedTimeBiologicalNight = convertSecToHours(\n        plannedFlight[0].timeBiologicalNight\n      );\n      statisctic.interval = plannedFlight[0].interval;\n    }\n    statisctic.name = interval;\n    result.push(statisctic);\n    return result;\n  }, []);\n  return allData;\n};\n","import { sortByDate } from \"./sort\";\nimport { months } from \"../const\";\nimport { filterByPlanned, groupByYears, groupByMonths } from \"./statistic\";\n\nconst NEXT_YEAR = 12;\n\nconst findNextFlight = (flights) => {\n  const currentDate = new Date();\n  let [year, month] = [\n    currentDate.getFullYear(),\n    months[currentDate.getMonth()],\n  ];\n  const flightsByYears = groupByYears(flights, \"YEAR\");\n  const flightsByMonths = groupByMonths(flightsByYears, \"MONTH\", year);\n  let dayX = flightsByMonths[month]\n    .filter((flight) => flight.dateFlight > currentDate)\n    .sort(sortByDate)\n    .slice(-1)[0];\n\n  while (!dayX) {\n    month = currentDate.getMonth() + 1;\n    if (month === NEXT_YEAR) {\n      dayX = \"not found\"\n      break;\n    }\n    dayX = flightsByMonths[months[month]]\n      .filter((flight) => flight.dateFlight > currentDate)\n      .sort(sortByDate)\n      .slice(-1)[0];\n  }\n\n  return dayX;\n};\n\nexport const getNextFlight = (flights) => {\n  const filteredPlannedFlights = filterByPlanned(flights);\n  if (!filteredPlannedFlights.length) {\n    return \"not found\";\n  }\n  const nextFlight = findNextFlight(filteredPlannedFlights);\n  return nextFlight;\n};\n","export const adaptServerToClient = (flight) => ({\n  ...flight,\n  dateFlight: new Date(flight.dateFlight),\n});\n","import { ActionType } from \"../../action\";\nimport { getNextFlight } from \"../../../helpers/flights\";\nimport { adaptServerToClient } from \"../../../helpers/adapter\";\n\nconst initialState = {\n  flights: [],\n  isFlightsLoaded: false,\n  nextFlight: {\n    date: \"\",\n    flightNumber: \"\",\n    plnType: \"\",\n    pln: \"\",\n  },\n  isNextFlightFinded: false,\n  noNextFlight: false,\n};\n\nexport const flightsData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.LOAD_FLIGHTS:\n      const apdaptedFlights = action.payload.map((flight) =>\n        adaptServerToClient(flight)\n      );\n      return { ...state, flights: apdaptedFlights, isFlightsLoaded: true };\n    case ActionType.SEARCH_NEXT_FLIGHT:\n      const nextFlight = getNextFlight(state.flights);\n      if (nextFlight === \"not found\") {\n        return {\n          ...state,\n          nextFlight: {\n            date: \"\",\n            flightNumber: \"\",\n            plnType: \"\",\n            pln: \"\",\n          },\n          isNextFlightFinded: false,\n          noNextFlight: true,\n        };\n      }\n      return { ...state, nextFlight: nextFlight, isNextFlightFinded: true, noNextFlight: false, };\n\n    default:\n      return state;\n  }\n};\n","import { ActionType } from \"../../action\";\nimport { StatisticType } from \"../../../const\";\n\nconst initialState = {\n  statisticType: StatisticType.YEARS,\n  filter: new Date().getFullYear(),\n  statsByInterval: {\n    actualTimeBiologicalNight: 0,\n    actualTimeBlock: 0,\n    actualTimeFlight: 0,\n    actualTimeNight: 0,\n    actualTimeWork: 0,\n    name: \"\",\n    interval: \"\",\n    plannedTimeBiologicalNight: 0,\n    plannedTimeBlock: 0,\n    plannedTimeFlight: 0,\n    plannedTimeNight: 0,\n    plannedTimeWork: 0,\n  },\n};\n\nexport const statisticData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.CHANGE_STATISTIC_TYPE:\n      return { ...state, statisticType: action.payload };\n    case ActionType.CHANGE_FILTER:\n      return { ...state, filter: action.payload };\n    case ActionType.CHANGE_INTERVAL:\n      return { ...state, statsByInterval: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { flightsData } from \"./flights/flights\";\nimport { statisticData } from \"./statistic/statistic\";\n\nexport const NameSpace = {\n  FLIGHTS: `FLIGHTS`,\n  STATISTIC: `STATISTIC`,\n};\n\nexport default combineReducers({\n  [NameSpace.FLIGHTS]: flightsData,\n  [NameSpace.STATISTIC]: statisticData,\n});\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  TableBody,\n  TableRow,\n  TableCell,\n  Table,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport { months } from \"../../const\";\nimport { ActionCreator } from \"../../store/action\";\n\nconst useStyles = makeStyles({\n  grid: {\n    width: \"100%\",\n    borderBottom: \"1px solid rgba(16, 66, 195, 0.15)\",\n    paddingBottom: \"24px\",\n  },\n  card: {\n    boxShadow: \"none\",\n  },\n  media: {\n    maxWidth: \"257px\",\n    marginBottom: \"15px\",\n    backgroundSize: \"contain\",\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"13px\",\n  },\n  th: {\n    border: \"none\",\n    paddingLeft: 0,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  td: {\n    border: \"none\",\n    paddingRight: 0,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst createData = (name, data) => {\n  return { name, data };\n};\n\nconst NextFlight = ({\n  nextFlight,\n  isNextFlightFinded,\n  searchNextFlight,\n  isFlightsLoaded,\n}) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n\n  const [flightData, setFlightData] = useState({\n    date: \"\",\n    flightNumber: \"\",\n    plnType: \"\",\n    pln: \"\",\n  });\n  const { date, flightNumber, plnType, pln } = flightData;\n\n  useEffect(() => {\n    if (!isNextFlightFinded && isFlightsLoaded) {\n      searchNextFlight();\n    }\n  }, [isNextFlightFinded, searchNextFlight, isFlightsLoaded]);\n\n  useEffect(() => {\n    if (isNextFlightFinded) {\n      setFlightData({\n        date: `${nextFlight.dateFlight\n          .toLocaleTimeString()\n          .slice(0, 5)} ${nextFlight.dateFlight.getDate()} ${\n          months[nextFlight.dateFlight.getMonth()]\n        } ${nextFlight.dateFlight.getFullYear()}`,\n        flightNumber: nextFlight.flight,\n        plnType: nextFlight.plnType,\n        pln: nextFlight.pln,\n      });\n    }\n  }, [isNextFlightFinded, nextFlight, setFlightData]);\n\n  const rows = [\n    createData(\"Дата рейса\", date),\n    createData(\"Номер рейса\", flightNumber),\n    createData(\"Тип воздушного судна\", plnType),\n    createData(\"Бортовой номер судна\", pln),\n  ];\n\n  return !isNextFlightFinded ? (\n    <p>Загрузка...</p>\n  ) : (\n    <Grid\n      item\n      className={classes.grid}\n      style={matches ? { borderBottom: \"none\" } : null}\n    >\n      <Card className={classes.card} align=\"center\">\n        <CardMedia\n          component=\"img\"\n          alt=\"Plane type\"\n          width={matches ? 372 : 257}\n          height={matches ? 104 : 89}\n          image=\"./img/plane.png\"\n          title=\"Plane type\"\n          className={classes.media}\n          style={matches ? { maxWidth: \"372px\" } : null}\n        />\n      </Card>\n      <CardContent style={{ padding: 0 }}>\n        <Table>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name} className={classes.row}>\n                <TableCell component=\"th\" variant=\"head\" className={classes.th}>\n                  {row.name}\n                </TableCell>\n\n                <TableCell variant=\"body\" className={classes.td} align=\"right\">\n                  {row.data}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Grid>\n  );\n};\n\nNextFlight.propTypes = {\n  nextFlight: PropTypes.object.isRequired,\n  searchNextFlight: PropTypes.func.isRequired,\n  isFlightsLoaded: PropTypes.bool.isRequired,\n  isNextFlightFinded: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  nextFlight: state[NameSpace.FLIGHTS].nextFlight,\n  isFlightsLoaded: state[NameSpace.FLIGHTS].isFlightsLoaded,\n  isNextFlightFinded: state[NameSpace.FLIGHTS].isNextFlightFinded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  searchNextFlight() {\n    dispatch(ActionCreator.setNextFlight());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextFlight);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Typography,\n  Grid,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    boxSizing: \"content-box\",\n    boxShadow: \"none\",\n    maxWidth: \"100%\",\n  },\n  accordionItem: {\n    padding: \"0\",\n  },\n  label: {\n    fontWeight: 700,\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n  expandIcon: {\n    position: \"relative\",\n    color: \"#4e85f5\",\n  },\n});\n\nconst AccordionContainer = ({ children, renderDetails }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item>\n      <Accordion className={classes.root}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={classes.accordionItem}\n        >\n          <Typography className={classes.label}>{children}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.accordionItem}>\n          {renderDetails()}\n        </AccordionDetails>\n      </Accordion>\n    </Grid>\n  );\n};\n\nAccordionContainer.propTypes = {\n  children: PropTypes.string.isRequired,\n  renderDetails: PropTypes.func.isRequired,\n};\n\nexport default AccordionContainer;\n","import { createSelector } from \"reselect\";\nimport { NameSpace } from \"./reducers/root\";\nimport {\n  filterByActual,\n  filterByPlanned,\n  getGroupedData,\n  getAllData,\n  findYears,\n  convertToChartData,\n} from \"../helpers/statistic\";\n\nexport const getChartData = createSelector(\n  (state) => state[NameSpace.FLIGHTS].flights,\n  (state) => state[NameSpace.STATISTIC].statisticType,\n  (state) => state[NameSpace.STATISTIC].filter,\n  (flights, statisticType, filter) => {\n    const filteredActualFlights = filterByActual(flights);\n    const filteredPlannedFlights = filterByPlanned(flights);\n    const actualFlights = getGroupedData(\n      filteredActualFlights,\n      statisticType,\n      filter\n    );\n    const plannedFlights = getGroupedData(\n      filteredPlannedFlights,\n      statisticType,\n      filter\n    );\n\n    const actualChartData = convertToChartData(actualFlights, statisticType, filter);\n    const plannedChartData = convertToChartData(plannedFlights, statisticType, filter);\n\n    const allData = getAllData(actualChartData, plannedChartData) || [];\n    return allData;\n  }\n);\n\nexport const getYears = createSelector(\n  (state) => state[NameSpace.FLIGHTS].flights,\n  (flights) => {\n    return findYears(flights);\n  }\n);\n\nexport const getFlightsForInterval = createSelector(\n  (state) => state[NameSpace.FLIGHTS].flights,\n  (state) => state[NameSpace.STATISTIC].statisticType,\n  (state) => state[NameSpace.STATISTIC].filter,\n  (flights, statisticType, filter) => {\n    return getGroupedData(flights, statisticType, filter);\n  }\n);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Typography, Grid, Container, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  labelFont: {\n    padding: \"5px\",\n    fontSize: \"12px\",\n    fontWeight: 700,\n    borderRadius: \"5px\",\n  },\n  gridItem: {\n    flexBasis: \"33%\",\n    width: \"33%\",\n    flexGrow: \"1\",\n  },\n});\n\nconst BlueSwitch = withStyles({\n  switchBase: {\n    color: \"#4e85f5\",\n    margin: \"0 auto\",\n  },\n  checked: {},\n  track: { backgroundColor: \"#4e85f5\" },\n})(Switch);\n\nconst Toggle = ({ changeHandler, labels }) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n\n  const [leftLabel, rightLabel] = labels;\n\n  const [state, setState] = useState({\n    checkedA: false,\n  });\n\n  const handleChange = (evt) => {\n    setState({ ...state, [evt.target.name]: evt.target.checked });\n    changeHandler();\n  };\n\n  return (\n    <Container style={{ padding: \"0\" }}>\n      <Grid\n        component=\"label\"\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item className={classes.gridItem} style={{ textAlign: \"right\" }}>\n          <Typography\n            className={classes.labelFont}\n            style={\n              !state.checkedA && !matches\n                ? { border: \"2px solid #4e85f5\", padding: \"3px\" }\n                : {}\n            }\n            component=\"p\"\n          >\n            {leftLabel}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <BlueSwitch\n            checked={state.checkedA}\n            onChange={handleChange}\n            name=\"checkedA\"\n            inputProps={{ \"aria-label\": \"statistic type toggle\" }}\n            className={classes.switchBase}\n          />\n        </Grid>\n        <Grid item className={classes.gridItem}>\n          <Typography\n            className={classes.labelFont}\n            style={\n              state.checkedA && !matches\n                ? { border: \"2px solid #4e85f5\", padding: \"3px\" }\n                : {}\n            }\n            component=\"p\"\n          >\n            {rightLabel}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nToggle.propTypes = {\n  changeHandler: PropTypes.func.isRequired,\n  labels: PropTypes.array.isRequired,\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Typography,\n  Grid,\n  Container,\n} from \"@material-ui/core\";\nimport { ActionCreator } from \"../../store/action\";\nimport { getYears } from \"../../store/selectors\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    justifyContent: `space-between`,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    background: `#ffffff`,\n  },\n  select: {\n    color: `black`,\n    height: `20px`,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SimpleSelect = ({ filter, setFilter, years }) => {\n  const classes = useStyles();\n\n  const handleChange = (evt) => {\n    setFilter(+evt.target.value);\n  };\n  if (filter === undefined) {\n    debugger;\n  }\n  return (\n    <Container style={{padding: \"0\"}}>\n      <Grid container className={classes.grid}>\n        <Typography component=\"p\">Выберите год</Typography>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            className={classes.select}\n            labelId=\"select-label\"\n            id=\"select-outlined\"\n            value={filter}\n            defaultValue={filter}\n            onChange={handleChange}\n            label=\"Year\"\n          >\n            {years.map((year, i) => (\n              <MenuItem key={`${year}-${i}`} value={year}>{year}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </Container>\n  );\n};\n\nSimpleSelect.propTypes = {\n  filter: PropTypes.number.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  years: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  filter: state[NameSpace.STATISTIC].filter,\n  years: getYears(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFilter(filter) {\n    dispatch(ActionCreator.changeFilter(filter));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleSelect);\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport { getChartData } from \"../../store/selectors\";\nimport Toggle from \"../toggle/toggle\";\nimport { Grid } from \"@material-ui/core\";\nimport { ActionCreator } from \"../../store/action\";\nimport { AppRoute, StatisticType } from \"../../const\";\nimport Select from \"../select/select\";\nimport {useHistory} from \"react-router\";\n\nconst times = [\"Время работы\", \"Время налёта\"];\nconst intervals = [\"Годы\", \"Месяцы\"];\n\nconst Chart = ({ chartData, toggleStatisticType, updateDetailsInterval }) => {\n  let history = useHistory();\n\n  const [isTimeToggled, setTimeToggle] = useState(false);\n  const [isStatisticTypeToggled, setStatisticToggle] = useState(false);\n  const bootomGap = isStatisticTypeToggled\n    ? { marginBottom: \"0\" }\n    : { marginBottom: \"30px\" };\n\n  const handleChangeToggle = useCallback(() => {\n    setTimeToggle(!isTimeToggled);\n  }, [isTimeToggled]);\n\n  const handleStatisticToggle = useCallback(() => {\n    setStatisticToggle(!isStatisticTypeToggled);\n  }, [isStatisticTypeToggled]);\n\n  useEffect(() => {\n    toggleStatisticType(\n      isStatisticTypeToggled ? StatisticType.MONTHS : StatisticType.YEARS\n    );\n  }, [isStatisticTypeToggled, toggleStatisticType]);\n\n  const handleBarClick = useCallback((evt) => {\n    updateDetailsInterval(evt.payload);\n    history.push(AppRoute.DETAILS);\n  }, [updateDetailsInterval, history]);\n\n  return (\n    <Grid container>\n      <Toggle changeHandler={handleStatisticToggle} labels={intervals} />\n      <Toggle\n        style={bootomGap}\n        changeHandler={handleChangeToggle}\n        labels={times}\n      />\n      <Grid\n        item\n        style={{ padding: \"10px 0\", minHeight: \"50px\", minWidth: \"100%\" }}\n      >\n        {isStatisticTypeToggled && <Select />}\n      </Grid>\n\n      <Grid\n        item\n        style={{ padding: \"10px 0\", minHeight: \"300px\", minWidth: \"100%\" }}\n      >\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n          <ResponsiveContainer>\n            <BarChart\n              width={280}\n              height={320}\n              data={chartData}\n              margin={{ left: -25, right: 10 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Legend\n                wrapperStyle={{ position: \"relative\" }}\n                layout=\"horizontal\"\n                verticalAlign=\"bottom\"\n                align=\"right\"\n              />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n\n              {isTimeToggled && (\n                <Bar\n                  onClick={handleBarClick}\n                  barSize={10}\n                  dataKey=\"actualTimeFlight\"\n                  name=\"Фактическое время налета\"\n                  stackId=\"a\"\n                  fill=\"rgb(78, 133, 245)\"\n                />\n              )}\n              {isTimeToggled && (\n                <Bar\n                  onClick={handleBarClick}\n                  barSize={10}\n                  dataKey=\"plannedTimeFlight\"\n                  name=\"Плановое время налета\"\n                  stackId=\"a\"\n                  fill=\"rgba(78, 133, 245, 0.6)\"\n                />\n              )}\n              {!isTimeToggled && (\n                <Bar\n                  onClick={handleBarClick}\n                  barSize={10}\n                  dataKey=\"actualTimeWork\"\n                  name=\"Фактическое время работы\"\n                  stackId=\"a\"\n                  fill=\"rgb(78, 133, 245)\"\n                />\n              )}\n              {!isTimeToggled && (\n                <Bar\n                  onClick={handleBarClick}\n                  barSize={10}\n                  dataKey=\"plannedTimeWork\"\n                  name=\"Плановое время работы\"\n                  stackId=\"a\"\n                  fill=\"rgba(78, 133, 245, 0.6)\"\n                />\n              )}\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nChart.propTypes = {\n  chartData: PropTypes.array.isRequired,\n  toggleStatisticType: PropTypes.func.isRequired,\n  updateDetailsInterval: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  chartData: getChartData(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleStatisticType(type) {\n    dispatch(ActionCreator.changeStatisticType(type));\n  },\n  updateDetailsInterval(interval) {\n    dispatch(ActionCreator.setDetailsInterval(interval));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);","import React from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport Chart from \"../chart/chart\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  label: {\n    color: \"#676565\",\n    fontWeight: 400,\n    fontSize: \"12px\",\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n  expandIcon: {\n    position: \"relative\",\n    color: \"#4e85f5\",\n  },\n});\n\nconst FlightStatistic = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Typography className={classes.label}>\n        Общая статистика налета и рабочего времени\n      </Typography>\n      <Chart />\n    </Grid>\n  );\n};\n\nexport default FlightStatistic;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  button: {\n    backgroundColor: \"#f1f1f1\",\n    border: \"1px solid #c4c4c4\",\n    boxShadow: \"none\",\n    textTransform: \"unset\",\n    fontWeight: 700\n  }\n});\n\nconst ShowMoreBtn = ({clickHandler}) => {\n  const classes = useStyles();\n  return <Button onClick={clickHandler} variant=\"contained\" className={classes.button}>Статистика налёта</Button>;\n};\n\nShowMoreBtn.propTypes = {\n  clickHandler: PropTypes.func.isRequired\n};\n\nexport default ShowMoreBtn;","import React from \"react\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport {useHistory} from \"react-router\";\nimport { AppRoute } from \"../../const\";\n\nconst SimpleBreadcrumbs = ({currentRoute}) => {\n  const history = useHistory();\n\n  const handleClick = (evt) => {\n    evt.preventDefault();\n    history.push(AppRoute.MAIN)\n  };\n\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      {currentRoute === AppRoute.DETAILS && (\n        <Link color=\"initial\" href=\"/\" onClick={handleClick}>\n          На главную\n        </Link>\n      )}\n    </Breadcrumbs>\n  );\n};\n\nexport default SimpleBreadcrumbs;\n","import {Typography} from '@material-ui/core'\nimport React from 'react'\n\nconst NoPlannedFlights = () => {\n  return (\n    <Typography>На ближайшее время запланированных полётов не найдено!</Typography>\n  );\n};\n\nexport default NoPlannedFlights;\n","import React, {useCallback, useState} from \"react\";\nimport {\n  Container,\n  Box,\n  Typography,\n  useMediaQuery,\n  Grid,\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport User from \"../user/user\";\nimport NextFlight from \"../next-flight/next-flight\";\nimport AccordionContainer from \"../accordion-container/accordion-container\";\nimport FlightStatistic from \"../flight-statistic/flight-statistic\";\nimport ShowMoreBtn from \"../show-chart-btn/show-chart-btn\";\nimport Chart from \"../chart/chart\";\nimport SimpleBreadcrumbs from \"../simple-breadcrumbs/simple-breadcrumbs\";\nimport {AppRoute} from \"../../const\";\nimport {connect} from \"react-redux\";\nimport {NameSpace} from \"../../store/reducers/root\";\nimport NoPlannedFlights from \"../no-planned-flights/no-planned-flights\";\n\nconst useStyles = makeStyles({\n  header: {\n    backgroundColor: \"#4e85f5\",\n    padding: \"28px 0 8px 20px\",\n  },\n  main: {\n    padding: \"15px 20px 13px 20px\",\n  },\n  title: {\n    fontWeight: 700,\n    margin: 0,\n  },\n  grid: {\n    flexDirection: \"column\",\n    wrap: \"wrap\",\n  },\n  gridItem: {\n    width: \"100%\",\n  },\n});\n\nconst MainPage = ({noNextFlight}) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n  const [isChartShowed, setChartShowStatus] = useState(false);\n\n  const handleShowChartBtnClick = useCallback(() => {\n    setChartShowStatus(!isChartShowed);\n  }, [isChartShowed]);\n\n  return (\n    <>\n      <Box\n        className={classes.header}\n        style={\n          matches\n            ? {background: \"url(./img/wing.png)\", padding: \"50px 0 40px 0\"}\n            : null\n        }\n      >\n        <SimpleBreadcrumbs currentRoute={AppRoute.MAIN} />\n        <Container\n          maxWidth={matches ? \"xl\" : \"xs\"}\n          style={matches ? {padding: \"0 17%\"} : null}\n        >\n          <Typography\n            className={classes.title}\n            color={matches ? \"textSecondary\" : \"textPrimary\"}\n            variant={matches ? \"h4\" : \"h5\"}\n            component=\"h1\"\n            gutterBottom\n          >\n            Профиль\n          </Typography>\n        </Container>\n      </Box>\n      <Box\n        className={classes.main}\n        style={matches ? {padding: \"0 17%\"} : null}\n      >\n        <Grid\n          container\n          className={classes.grid}\n          style={matches ? {height: \"593px\"} : null}\n        >\n          <Grid\n            item\n            container\n            className={classes.gridItem}\n            style={\n              matches\n                ? {\n                  flexDirection: \"row\",\n                  borderBottom: \"1px solid rgba(16, 66, 195, 0.15)\",\n                }\n                : null\n            }\n          >\n            <Grid item style={{width: \"50%\"}}>\n              <User />\n            </Grid>\n            <Grid\n              item\n              container\n              direction=\"column\"\n              alignItems=\"flex-end\"\n              justify=\"center\"\n              style={{width: \"50%\"}}\n            >\n              {matches && <ShowMoreBtn clickHandler={handleShowChartBtnClick} />}\n            </Grid>\n          </Grid>\n          <Grid container justify=\"space-between\" style={{paddingTop: \"20px\"}}>\n            <Grid\n              item\n              className={classes.gridItem}\n              style={\n                matches ? {width: \"45%\", padding: \"29px 0 33px 0\"} : null\n              }\n            >\n              {noNextFlight ? <NoPlannedFlights /> : <NextFlight />}\n            </Grid>\n            {matches ? null : (\n              <AccordionContainer\n                style={{width: \"350px\"}}\n                renderDetails={() => <FlightStatistic />}\n              >\n                Статистика налёта\n              </AccordionContainer>\n            )}\n            {isChartShowed ? (\n              <Grid\n                item\n                style={\n                  matches\n                    ? {\n                      width: \"45%\",\n                    }\n                    : null\n                }\n              >\n                <Chart />\n              </Grid>\n            ) : null}\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  noNextFlight: state[NameSpace.FLIGHTS].noNextFlight,\n});\n\nexport default connect(mapStateToProps)(MainPage);\n","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  grid: {\n    width: \"100%\",\n    borderBottom: \"1px solid rgba(16, 66, 195, 0.15)\",\n    paddingBottom: \"24px\",\n  },\n  card: {\n    boxShadow: \"none\",\n  },\n  media: {\n    maxWidth: \"257px\",\n    marginBottom: \"15px\",\n    backgroundSize: \"contain\",\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"0\",\n  },\n  th: {\n    border: \"none\",\n    paddingLeft: 0,\n    paddingTop: \"0px\",\n    paddingBottom: \"0px\",\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  td: {\n    border: \"none\",\n    paddingRight: 0,\n    paddingTop: \"0px\",\n    paddingBottom: \"0px\",\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst DetailsTable = ({ rows, title }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography\n        className={classes.title}\n        variant=\"h6\"\n        id=\"tableTitle\"\n        component=\"div\"\n      >\n        {title}\n      </Typography>\n      <Table>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name} className={classes.row}>\n              <TableCell component=\"th\" variant=\"head\" className={classes.th}>\n                {row.name}\n              </TableCell>\n\n              <TableCell variant=\"body\" className={classes.td} align=\"right\">\n                {row.data}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nexport default DetailsTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst mapFlightParam = {\n  dateFlight: \"Дата\",\n  flight: \"Номер рейса\",\n  pln: \"Бортовой номер ВС\",\n  plnType: \"Тип ВС\",\n  from: \"Аэродром взлета\",\n  fromLat: \"Аэродром взлёта - долгота\",\n  fromLong: \"Аэродром взлёта - широта\",\n  to: \"Аэродром посадки\",\n  toLat: \"Аэродром посадки - долгота\",\n  toLong: \"Аэродром посадки - широта\",\n  timeFlight: \"Время налёта\",\n  timeBlock: \"Полётное время\",\n  timeNight: \"Ночное лётное время\",\n  timeBiologicalNight: \"Биологическая ночь\",\n  timeWork: \"Рабочее время\",\n  type: \"Тип налёта\",\n};\n\nconst useStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n  th: {\n    fontSize: \"0.7rem\",\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  td: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst Row = ({ row }) => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const rowKeys = Object.keys(row);\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\" className={classes.th}>\n          {row.flight}\n        </TableCell>\n        <TableCell className={classes.td} align=\"right\">\n          {row.dateFlight}\n        </TableCell>\n        <TableCell className={classes.td} align=\"right\">\n          {row.from}\n        </TableCell>\n        <TableCell className={classes.td} align=\"right\">\n          {row.to}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Детали полета\n              </Typography>\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableBody>\n                  {rowKeys.map((key) => (\n                    <TableRow key={key} className={classes.row}>\n                      <TableCell\n                        component=\"th\"\n                        variant=\"head\"\n                        className={classes.th}\n                      >\n                        {mapFlightParam[key]}\n                      </TableCell>\n\n                      <TableCell\n                        variant=\"body\"\n                        className={classes.td}\n                        align=\"right\"\n                      >\n                        {row[key]}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nRow.propTypes = {\n  row: PropTypes.object.isRequired\n};\n\nexport default Row;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Row from \"../collapsible-table-row/collabsible-table-row\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n  th: {\n    fontSize: \"0.7rem\",\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  td: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst createData = (flightData) => {\n  const {\n    dateFlight,\n    flight,\n    takeoff,\n    landing,\n    pln,\n    plnType,\n    timeFlight,\n    timeBlock,\n    timeNight,\n    timeBiologicalNight,\n    timeWork,\n    type,\n  } = flightData;\n  return {\n    dateFlight: dateFlight.toLocaleString(),\n    flight: flight,\n    pln: pln,\n    plnType: plnType,\n    from: takeoff.name,\n    fromLat: takeoff.lat,\n    fromLong: takeoff.long,\n    to: landing.name,\n    toLat: landing.lat,\n    toLong: landing.long,\n    timeFlight,\n    timeBlock,\n    timeNight,\n    timeBiologicalNight,\n    timeWork,\n    type: type ? \"Плановый\" : \"Фактический\",\n  };\n};\n\nconst CollapsibleTable = ({ flights }) => {\n  const classes = useStyles();\n  const generateRows = (flights) => flights.map((flight) => createData(flight));\n  const rows = generateRows(flights);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell className={classes.th}>Номер рейса</TableCell>\n            <TableCell className={classes.th} align=\"right\">\n              Дата рейса\n            </TableCell>\n            <TableCell className={classes.th} align=\"right\">\n              Откуда\n            </TableCell>\n            <TableCell className={classes.th} align=\"right\">\n              Куда\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, i) => (\n            <Row key={`${row.name}-${i}`} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nCollapsibleTable.propTypes = {\n  flights: PropTypes.array.isRequired,\n};\n\nexport default CollapsibleTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Box, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport DetailsTable from \"../details-table/details-table\";\nimport CollapsibleTable from \"../collapsible-table/collapsible-table\";\nimport { getFlightsForInterval } from \"../../store/selectors\";\nimport SimpleBreadcrumbs from \"../simple-breadcrumbs/simple-breadcrumbs\";\nimport { AppRoute } from \"../../const\";\n\nconst createData = (name, data) => {\n  return { name, data };\n};\n\nconst useStyles = makeStyles({\n  header: {\n    backgroundColor: \"#4e85f5\",\n    padding: \"28px 0 8px 20px\",\n  },\n  main: {\n    padding: \"15px 20px 13px 20px\",\n  },\n  title: {\n    fontWeight: 700,\n    margin: 0,\n  },\n  grid: {\n    flexDirection: \"column\",\n    wrap: \"wrap\",\n  },\n  gridItem: {\n    width: \"100%\",\n  },\n});\n\nconst DetailsPage = ({ statsByInterval, flightsForInterval }) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n  const {\n    actualTimeFlight,\n    actualTimeBlock,\n    actualTimeNight,\n    actualTimeBiologicalNight,\n    actualTimeWork,\n    plannedTimeFlight,\n    plannedTimeBlock,\n    plannedTimeNight,\n    plannedTimeBiologicalNight,\n    plannedTimeWork,\n    interval,\n  } = statsByInterval;\n\n  const actualDataRows = [\n    createData(\"Общее время налёта\", actualTimeFlight),\n    createData(\"Общее полётное время\", actualTimeBlock),\n    createData(\"Общее ночное время\", actualTimeNight),\n    createData(\"Общее время биологической ночи\", actualTimeBiologicalNight),\n    createData(\"Общее рабочее время\", actualTimeWork),\n  ];\n\n  const plannedDataRows = [\n    createData(\"Общее время налёта\", plannedTimeFlight),\n    createData(\"Общее полётное время\", plannedTimeBlock),\n    createData(\"Общее ночное время\", plannedTimeNight),\n    createData(\"Общее время биологической ночи\", plannedTimeBiologicalNight),\n    createData(\"Общее рабочее время\", plannedTimeWork),\n  ];\n\n  return (\n    <Container maxWidth={matches ? \"md\" : \"xs\"}>\n      <Box my={8} pl={10}>\n        <SimpleBreadcrumbs currentRoute={AppRoute.DETAILS} />\n      </Box>\n      <Box my={4} textAlign=\"center\" className={classes.main}>\n        <Typography variant={matches ? \"h4\" : \"h5\"} component=\"h2\" gutterBottom>\n          {`Статистика за ${interval}`}\n        </Typography>\n        <Container maxWidth={matches ? \"sm\" : \"xs\"}>\n          <Box my={10}>\n            <DetailsTable title={\"Фактическое время\"} rows={actualDataRows} />\n            <DetailsTable title={\"Плановое время\"} rows={plannedDataRows} />\n          </Box>\n        </Container>\n        <CollapsibleTable flights={flightsForInterval[statsByInterval.name]} />\n      </Box>\n    </Container>\n  );\n};\n\nDetailsPage.propTypes = {\n  statsByInterval: PropTypes.object.isRequired,\n  flightsForInterval: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  statsByInterval: state[NameSpace.STATISTIC].statsByInterval,\n  flightsForInterval: getFlightsForInterval(state),\n});\n\nexport default connect(mapStateToProps)(DetailsPage);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { AppRoute } from \"../../const\";\nimport MainPage from \"../main-page/main-page\";\nimport DetailsPage from \"../details-page/details-page\";\nimport { createMuiTheme, ThemeProvider, CssBaseline } from \"@material-ui/core\";\n\nconst App = () => {\n  const theme = createMuiTheme({\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          body: {\n            backgroundColor: \"#ffffff\",\n          },\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: \"#e5e5e5\",\n      },\n      secondary: {\n        main: \"#4e85f5\",\n      },\n      text: {\n        primary: \"#ffffff\",\n        secondary: \"#4e85f5\",\n      },\n    },\n    background: {\n      default: \"#e5e5e5\",\n    },\n    typography: {\n      body1: {\n        fontWeight: 400,\n        color: \"#000000\",\n      },\n      body2: {\n        fontWeight: 700,\n        color: \"#676565\",\n      },\n      h5: {\n        fontWeight: 700,\n      },\n    },\n    spacing: 2,\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path={AppRoute.MAIN}\n            render={(props) => <MainPage history={props.history} />}\n          ></Route>\n          <Route exact path={AppRoute.DETAILS} render={() => <DetailsPage />} />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const Method = {\n  GET: `GET`,\n};\n\nconst SuccessHTTPStatusRange = {\n  MIN: 200,\n  MAX: 299\n};\n\nclass Api {\n  constructor(endPoint) {\n    this._endPoint = endPoint;\n  }\n\n  getFlights(url) {\n    return this._load({url: url})\n      .then(Api.toJSON)\n      .catch((err) => {\n        throw console.log(err);\n      });\n  }\n\n  _load({\n    url,\n    method = Method.GET,\n    body = null,\n    headers = new Headers({\"Accept\": \"application/json\"}),\n    mode = \"cors\"\n  }) {\n    return fetch(`${this._endPoint}${url}`, {\n      method,\n      body,\n      headers,\n      mode\n    })\n      .then(Api.checkStatus)\n      .catch((err) => {\n        throw console.log(err);\n      });\n  }\n\n  static checkStatus(response) {\n    if (\n      response.status < SuccessHTTPStatusRange.MIN &&\n      response.status > SuccessHTTPStatusRange.MAX\n    ) {\n      throw new Error(`${response.status}: ${response.statusText}`);\n    }\n\n    return response;\n  }\n\n  static toJSON(response) {\n    return response.json();\n  }\n\n  static catchError(err) {\n    throw err;\n  }\n}\n\nexport default Api;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport App from \"./components/app/app\";\nimport root from \"./store/reducers/root\";\nimport Api from \"./api/api\";\nimport { fetchFlights } from \"./store/api-actions\";\n\nconst BACKEND_URL = `http://localhost:8080`;\n\nconst api = new Api(BACKEND_URL);\nconst store = createStore(\n  root,\n  composeWithDevTools(applyMiddleware(thunk.withExtraArgument(api)))\n);\n\nPromise.all([store.dispatch(fetchFlights())])\n  .then(() => {\n    render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n","import { APIRoute } from \"../const\";\nimport { ActionCreator } from \"./action\";\n\nexport const fetchFlights = () => (dispatch, _getState, api) =>\n  api\n    .getFlights(APIRoute.FETCH_FLIGHTS)\n    .then((flights) => dispatch(ActionCreator.loadFlights(flights)));\n"],"sourceRoot":""}