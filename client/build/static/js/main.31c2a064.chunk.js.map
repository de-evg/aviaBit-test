{"version":3,"sources":["store/action.js","mock/flights.js","helpers/sort.js","const.js","helpers/statistic.js","helpers/flights.js","store/reducers/flights/flights.js","store/reducers/statistic/statistic.js","store/reducers/root.js","components/user/user.jsx","components/next-flight/next-flight.jsx","components/accordion-container/accordion-container.jsx","store/selectors.js","components/toggle/toggle.jsx","components/select/select.js","components/chart/chart.jsx","components/flight-statistic/flight-statistic.jsx","components/main-page/main-page.jsx","components/details-page/details-page.jsx","components/app/app.jsx","index.jsx"],"names":["ActionType","ActionCreator","flights","type","payload","filter","FlightDate","FlightNumber","PlaneType","PlaneNumber","TimeFlight","Time","generateRandomNumber","start","end","Math","floor","random","generateTimes","work","block","flight","night","biologicalNight","generateFlight","time","Date","length","generateFlights","index","push","sortByDate","flightA","flightB","dateFlight","AppRoute","StatisticType","months","Interval","MONTH","date","getMonth","YEAR","getFullYear","groupByYears","statisticType","reduce","result","year","groupByMonths","flightsByYears","Month","month","MonthMap","filterByPlanned","getGroupedData","years","Object","keys","statisticByYears","yearStatistic","timeFlight","timeWork","name","statisticByMonths","monthStatistic","convertToChartData","convertSecToHours","sec","getNextFlight","nextFlight","currentDate","flightsByMonths","dayX","sort","slice","findNextFlight","console","log","initialState","isFlightsLoaded","flightNumber","plnType","pln","isNextFlightFinded","NameSpace","combineReducers","state","action","useStyles","makeStyles","root","marginBottom","userName","color","fontWeight","userMail","User","classes","Grid","container","spacing","wrap","alignContent","item","className","Avatar","alt","style","width","height","src","alignItems","Typography","variant","grid","borderBottom","paddingBottom","card","boxShadow","plane","row","display","justifyContent","th","border","paddingLeft","paddingTop","td","paddingRight","createData","data","connect","dispatch","searchNextFlight","useState","flightData","setFlightData","useEffect","toLocaleTimeString","getDate","rows","Card","CardMedia","component","image","title","CardContent","padding","Table","TableBody","map","TableRow","TableCell","align","boxSizing","maxWidth","accordionItem","label","expandIcon","position","AccordionContainer","children","renderDetails","Accordion","AccordionSummary","aria-controls","id","AccordionDetails","getChartData","createSelector","filteredActualFlights","filterByActual","filteredPlannedFlights","actualChartData","plannedChartData","Set","forEach","add","statisctic","actualFlight","plannedFlight","actualTimeFlight","actualTimeWork","plannedTimeFlight","plannedTimeWork","getAllData","getYears","labelFont","fontSize","borderRadius","gridItem","flexBasis","flexGrow","BlueSwitch","withStyles","switchBase","margin","checked","track","backgroundColor","Switch","Toggle","changeHandler","labels","leftLabel","rightLabel","checkedA","setState","Container","justify","textAlign","onChange","evt","target","inputProps","theme","formControl","minWidth","background","select","selectEmpty","marginTop","setFilter","FormControl","Select","labelId","value","defaultValue","i","MenuItem","times","intervals","chartData","toggleStatisticType","viewPortWidth","undefined","window","innerWidth","document","documentElement","clientWidth","isTimeToggled","setTimeToggle","isStatisticTypeToggled","setStatisticToggle","bootomGap","handleChangeToggle","useCallback","handleStatisticToggle","minHeight","ResponsiveContainer","BarChart","left","right","CartesianGrid","strokeDasharray","Legend","wrapperStyle","layout","verticalAlign","XAxis","dataKey","YAxis","Bar","barSize","stackId","fill","FlightStatistic","header","main","MainPage","history","matches","useMediaQuery","Box","gutterBottom","DetailsPage","my","getFlights","createMuiTheme","overrides","MuiCssBaseline","body","palette","primary","secondary","text","third","default","typography","body1","body2","h5","ThemeProvider","CssBaseline","exact","path","render","props","store","createStore","composeWithDevTools","getElementById"],"mappings":"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","file":"static/js/main.31c2a064.chunk.js","sourcesContent":["export const ActionType = {\n  LOAD_FLIGHTS: \"LOAD_FLIGHTS\",\n  CHANGE_STATISTIC_TYPE: \"CHANGE_STATISTIC_TYPE\",\n  CHANGE_FILTER: \"CHANGE_FILTER\",\n  SEARCH_NEXT_FLIGHT: \"SEARCH_NEXT_FLIGHT\"\n};\n\nexport const ActionCreator = {\n  loadFlights: (flights) => ({\n    type: \"LOAD_FLIGHTS\",\n    payload: flights\n  }),\n  changeStatisticType: (type) => ({\n    type: \"CHANGE_STATISTIC_TYPE\",\n    payload: type\n  }),\n  changeFilter: (filter) => ({\n    type: \"CHANGE_FILTER\",\n    payload: filter\n  }),\n  setNextFlight: () => ({\n    type: \"SEARCH_NEXT_FLIGHT\",\n  })\n};\n","const FLIGHT_COUNT = 500;\n\nconst FlightDate = {\n  START: 2010,\n  END: 2022\n};\n\nconst FlightNumber = {\n  START: 1000,\n  END: 5000\n};\n\nconst PlaneType = [\n  'B-757-200',\n  'B-757-300',\n  'B-767-200',\n  'B-767-300',\n  'A-380',\n  'A-350'\n];\n\nconst PlaneNumber = {\n  START: 100,\n  END: 999\n};\n\nconst TimeFlight = {\n  START: 14400,\n  END: 36000\n};\n\nconst Time = {\n  PREFLIGHT: 3600,\n  POSTFLIGHT: 3600,\n  MOVE_ON_GROUND: 1800\n};\n\nconst generateRandomDate = (start, end) => {\n  return new Date(start + Math.random() * (end - start), generateRandomNumber(0, 11) , generateRandomNumber(1, 30));\n};\n\nconst generateRandomNumber = (start, end) => {\n  return Math.floor(start + Math.random() * (end - start));\n};\n\nconst isNightFlying = () => Math.random() > 0.5;\n\nconst generateTimes = () => {\n  const work = generateRandomNumber(TimeFlight.START, TimeFlight.END);\n  const block = work - Time.PREFLIGHT - Time.POSTFLIGHT;\n  const flight = block - Time.MOVE_ON_GROUND;\n\n  let night = 0;\n  let biologicalNight = 0;\n  if (isNightFlying()) {\n    night = flight - generateRandomNumber(0, flight);\n    biologicalNight = night;\n  }\n\n  return {work, block, flight, night, biologicalNight}\n};\n\nconst generateFlight = () => {\n  const time = generateTimes();\n  return {\n    'dateFlight': generateRandomDate(FlightDate.START, FlightDate.END),\n    'flight': generateRandomNumber(FlightNumber.START, FlightNumber.END),\n    'plnType': PlaneType[generateRandomNumber(0, PlaneType.length)],\n    'pln': `${generateRandomNumber(PlaneNumber.START, PlaneNumber.END)}AK`,\n    'timeFlight': time.flight,\n    'timeBlock': time.block,\n    'timeNight': time.night,\n    'timeBiologicalNight': time.biologicalNight,\n    'timeWork': time.work,\n    'type': Math.random() > 0.5,\n    'takeoff': {\n      'name': 'Томск(Богашево)',\n      'lat': 56.38333333,\n      'long': 85.2\n    },\n    'landing': {\n      'name': 'Нячанг(Камрань Интл)',\n      'lat': 11.99805555,\n      'long': 109.21944444\n    }\n  };\n};\n\nexport const generateFlights = () => {\n  const flights = [];\n  for (let index = 0; index < FLIGHT_COUNT; index++) {\n    flights.push(generateFlight());\n  }\n  return flights;\n;}\n","export const sortByDate = (flightA, flightB) => {\n  if (flightA.dateFlight - flightB.dateFlight > 0) {\n    return 1;\n  }\n\n  if (flightA.dateFlight - flightB.dateFlight < 0) {\n    return -1;\n  }\n\n  return 0;\n};\n","export const AppRoute = {\n  MAIN: \"/\",\n  DETAILS: \"/details\",\n};\n\nexport const StatisticType = {\n  YEARS: \"YEARS\",\n  MONTHS: \"MONTHS\",\n};\n\nexport const months = [\n  \"JAN\",\n  \"FEB\",\n  \"MAR\",\n  \"APR\",\n  \"MAY\",\n  \"JUN\",\n  \"JUL\",\n  \"AUG\",\n  \"SEP\",\n  \"OCT\",\n  \"NOV\",\n  \"DEC\",\n];\n","import { StatisticType, months } from \"../const\";\n\nconst Interval = {\n  MONTH: (date) => date.getMonth(),\n  YEAR: (date) => date.getFullYear(),\n};\n\nexport const groupByYears = (flights, statisticType) => {\n  return flights.reduce((result, flight) => {\n    const year = Interval[statisticType](flight.dateFlight);\n    result[year] = result[year] || [];\n    result[year].push(flight);\n    return result;\n  }, {});\n};\n\nexport const groupByMonths = (flightsByYears, statisticType, year) => {\n  const Month = months.reduce((result, month) => {\n    result[month] = [];\n    return result;\n  }, {});\n\n  return flightsByYears[year].reduce((MonthMap, flight) => {\n    const monthName = months[Interval[statisticType](flight.dateFlight)];\n    MonthMap[monthName].push(flight);\n\n    return MonthMap;\n  }, Month);\n};\n\nexport const filterByActual = (flights) => {\n  return flights.filter((flight) => !flight.type);\n};\n\nexport const filterByPlanned = (flights) => {\n  return flights.filter((flight) => !!flight.type);\n};\n\nconst convertToChartData = (flights, statisticType) => {\n  const years = Object.keys(flights);\n  switch (statisticType) {\n    case StatisticType.YEARS:\n      return years.reduce((statisticByYears, year) => {\n        const yearStatistic = flights[year].reduce(\n          (time, flight) => {\n            time.timeFlight += flight.timeFlight || 0;\n            time.timeWork += flight.timeWork || 0;\n            return time;\n          },\n          { timeFlight: 0, timeWork: 0, name: year }\n        );\n\n        statisticByYears.push(yearStatistic);\n        return statisticByYears;\n      }, []);\n\n    case StatisticType.MONTHS:\n      return months.reduce((statisticByMonths, month) => {\n        const monthStatistic = flights[month].reduce(\n          (time, flight) => {\n            time.timeFlight += flight.timeFlight || 0;\n            time.timeWork += flight.timeWork || 0;\n            return time;\n          },\n          { timeFlight: 0, timeWork: 0, name: month }\n        );\n        statisticByMonths.push(monthStatistic);\n        return statisticByMonths;\n      }, []);\n\n    default:\n      return flights;\n  }\n};\n\nexport const getGroupedData = (flights, statisticType, filter) => {\n  const flightsByYears = groupByYears(flights, \"YEAR\");\n  const result =\n    statisticType === StatisticType.YEARS\n      ? flightsByYears\n      : groupByMonths(flightsByYears, \"MONTH\", filter);\n  const convertedFlights = convertToChartData(result, statisticType);\n  return convertedFlights;\n};\n\nconst convertSecToHours = (sec) => Math.floor(sec / 3600);\n\nexport const getAllData = (actualChartData, plannedChartData) => {\n  if (\n    Object.keys(actualChartData).length &&\n    Object.keys(plannedChartData).length\n  ) {\n    const years = new Set();\n    actualChartData.forEach((flight) => {\n      years.add(flight.name);\n    });\n    plannedChartData.forEach((flight) => {\n      years.add(flight.name);\n    });\n\n    const allData = [...years].reduce((result, year) => {\n      const statisctic = {};\n      const actualFlight = actualChartData.filter((data) => data.name === year);\n      const plannedFlight = plannedChartData.filter(\n        (data) => data.name === year\n      );\n      if (actualFlight.length) {\n        statisctic.actualTimeFlight = convertSecToHours(\n          actualFlight[0].timeFlight\n        );\n        statisctic.actualTimeWork = convertSecToHours(actualFlight[0].timeWork);\n      }\n      if (plannedFlight.length) {\n        statisctic.plannedTimeFlight = convertSecToHours(\n          plannedFlight[0].timeFlight\n        );\n        statisctic.plannedTimeWork = convertSecToHours(\n          plannedFlight[0].timeWork\n        );\n      }\n      statisctic.name = year;\n      result.push(statisctic);\n      return result;\n    }, []);\n    return allData;\n  }\n};\n","import { sortByDate } from \"./sort\";\nimport { months } from \"../const\";\nimport { filterByPlanned, groupByYears, groupByMonths } from \"./statistic\";\n\nconst NEXT_YEAR = 12;\n\nconst findNextFlight = (flights) => {\n  const currentDate = new Date();\n  let [year, month] = [\n    currentDate.getFullYear(),\n    months[currentDate.getMonth()],\n  ];\n  const flightsByYears = groupByYears(flights, \"YEAR\");\n  const flightsByMonths = groupByMonths(flightsByYears, \"MONTH\", year);\n  let dayX = flightsByMonths[month]\n    .filter((flight) => flight.dateFlight > currentDate)\n    .sort(sortByDate)\n    .slice(-1)[0];\n\n  while (!dayX) {\n    month = currentDate.getMonth() + 1;\n    if (month === NEXT_YEAR) {\n      year = currentDate.getFullYear() + 1;\n      month = 0;\n    }\n    dayX = flightsByMonths[months[month]]\n      .filter((flight) => flight.dateFlight > currentDate)\n      .sort(sortByDate)\n      .slice(-1)[0];\n  }\n\n  return dayX;\n};\n\nexport const getNextFlight = (flights) => {\n  const filteredPlannedFlights = filterByPlanned(flights);\n  const nextFlight = findNextFlight(filteredPlannedFlights);\n  if (!nextFlight) {\n    debugger;\n  }\n  console.log(nextFlight);\n  return nextFlight;\n};\n","import { generateFlights } from \"../../../mock/flights\";\nimport { ActionType } from \"../../action\";\nimport { getNextFlight } from \"../../../helpers/flights\";\n\nconst initialState = {\n  flights: [],\n  isFlightsLoaded: false,\n  nextFlight: {\n    date: \"\",\n    flightNumber: \"\",\n    plnType: \"\",\n    pln: \"\",\n  },\n  isNextFlightFinded: false,\n};\n\nexport const flightsData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.LOAD_FLIGHTS:\n      const flights = generateFlights();\n      return { ...state, flights, isFlightsLoaded: true };\n    case ActionType.SEARCH_NEXT_FLIGHT:\n      const nextFlight = getNextFlight(state.flights);\n      return { ...state, nextFlight: nextFlight, isNextFlightFinded: true };\n\n    default:\n      return state;\n  }\n};\n","import { ActionType } from \"../../action\";\nimport { StatisticType } from \"../../../const\";\n\nconst initialState = {\n  statisticType: StatisticType.YEARS,\n  filter: new Date().getFullYear()\n};\n\nexport const statisticData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.CHANGE_STATISTIC_TYPE:\n      return { ...state, statisticType: action.payload };\n    case ActionType.CHANGE_FILTER:\n        return { ...state, filter: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { flightsData } from \"./flights/flights\";\nimport { statisticData } from \"./statistic/statistic\";\n\nexport const NameSpace = {\n  FLIGHTS: `FLIGHTS`,\n  STATISTIC: `STATISTIC`,\n};\n\nexport default combineReducers({\n  [NameSpace.FLIGHTS]: flightsData,\n  [NameSpace.STATISTIC]: statisticData,\n});\n","import React from \"react\";\nimport { Typography, Avatar, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: \"13px\",\n  },\n  userName: {\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst User = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={5}\n      wrap=\"nowrap\"\n      alignContent=\"space-between\"\n      item\n      className={classes.root}\n    >\n      <Grid item>\n        <Avatar\n          alt=\"Sheldon Cooper\"\n          style={{ width: \"60px\", height: \"60px\" }}\n          src=\"./img/avatar.jpg\"\n        />\n      </Grid>\n      <Grid container alignItems=\"center\" item>\n        <Grid item>\n          <Typography className={classes.userName} variant=\"body1\">\n            Шелдон Купер\n          </Typography>\n          <Typography className={classes.userMail} variant=\"body2\">\n            sheldon.cooper@gmail.com\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default User;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  TableBody,\n  TableRow,\n  TableCell,\n  Table,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport { months } from \"../../const\";\nimport { ActionCreator } from \"../../store/action\";\n\nconst useStyles = makeStyles({\n  grid: {\n    width: \"100%\",\n    borderBottom: \"1px solid rgba(16, 66, 195, 0.15)\",\n    paddingBottom: \"24px\",\n  },\n  card: {\n    boxShadow: \"none\",\n  },\n  plane: {\n    marginBottom: \"15px\",\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"13px\",\n  },\n  th: {\n    border: \"none\",\n    paddingLeft: 0,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  td: {\n    border: \"none\",\n    paddingRight: 0,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst createData = (name, data) => {\n  return { name, data };\n};\n\nconst NextFlight = ({\n  nextFlight,\n  isNextFlightFinded,\n  searchNextFlight,\n  isFlightsLoaded,\n}) => {\n  const classes = useStyles();\n\n  const [flightData, setFlightData] = useState({\n    date: \"\",\n    flightNumber: \"\",\n    plnType: \"\",\n    pln: \"\",\n  });\n  const { date, flightNumber, plnType, pln } = flightData;\n\n  useEffect(() => {\n    if (!isNextFlightFinded && isFlightsLoaded) {\n      searchNextFlight();\n    }\n  }, [isNextFlightFinded, searchNextFlight, isFlightsLoaded]);\n\n  useEffect(() => {\n    if (isNextFlightFinded) {\n      setFlightData({\n        date: `${nextFlight.dateFlight\n          .toLocaleTimeString()\n          .slice(0, 5)} ${nextFlight.dateFlight.getDate()} ${\n          months[nextFlight.dateFlight.getMonth()]\n        } ${nextFlight.dateFlight.getFullYear()}`,\n        flightNumber: nextFlight.flight,\n        plnType: nextFlight.plnType,\n        pln: nextFlight.pln,\n      });\n    }\n  }, [isNextFlightFinded, nextFlight, setFlightData]);\n\n  const rows = [\n    createData(\"Дата рейса\", date),\n    createData(\"Номер рейса\", flightNumber),\n    createData(\"Тип воздушного судна\", plnType),\n    createData(\"Бортовой номер судна\", pln),\n  ];\n\n  return !isNextFlightFinded ? (\n    <p>Загрузка...</p>\n  ) : (\n    <Grid item className={classes.grid}>\n      <Card className={classes.card}>\n        <CardMedia\n          component=\"img\"\n          alt=\"Plane type\"\n          width=\"257\"\n          height=\"89\"\n          image=\"./img/plane.png\"\n          title=\"Plane type\"\n          className={classes.plane}\n        />\n      </Card>\n      <CardContent style={{ padding: 0 }}>\n        <Table>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name} className={classes.row}>\n                <TableCell component=\"th\" variant=\"head\" className={classes.th}>\n                  {row.name}\n                </TableCell>\n\n                <TableCell variant=\"body\" className={classes.td} align=\"right\">\n                  {row.data}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Grid>\n  );\n};\n\nNextFlight.propTypes = {\n  nextFlight: PropTypes.object.isRequired,\n  searchNextFlight: PropTypes.func.isRequired,\n  isFlightsLoaded: PropTypes.bool.isRequired,\n  isNextFlightFinded: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  nextFlight: state[NameSpace.FLIGHTS].nextFlight,\n  isFlightsLoaded: state[NameSpace.FLIGHTS].isFlightsLoaded,\n  isNextFlightFinded: state[NameSpace.FLIGHTS].isNextFlightFinded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  searchNextFlight() {\n    dispatch(ActionCreator.setNextFlight());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextFlight);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Typography,\n  Grid,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    boxSizing: \"content-box\",\n    boxShadow: \"none\",\n    maxWidth: \"100%\",\n  },\n  accordionItem: {\n    padding: \"0\",\n  },\n  label: {\n    fontWeight: 700,\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n  expandIcon: {\n    position: \"relative\",\n    color: \"#4e85f5\",\n  },\n});\n\nconst AccordionContainer = ({ children, renderDetails }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item>\n      <Accordion className={classes.root}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={classes.accordionItem}\n        >\n          <Typography className={classes.label}>{children}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.accordionItem}>\n          {renderDetails()}\n        </AccordionDetails>\n      </Accordion>\n    </Grid>\n  );\n};\n\nAccordionContainer.propTypes = {\n  children: PropTypes.string.isRequired,\n  renderDetails: PropTypes.func.isRequired,\n};\n\nexport default AccordionContainer;\n","import { createSelector } from \"reselect\";\nimport { NameSpace } from \"./reducers/root\";\nimport {\n  filterByActual,\n  filterByPlanned,\n  getGroupedData,\n  getAllData,\n  groupByYears,\n} from \"../helpers/statistic\";\n\nexport const getChartData = createSelector(\n  (state) => state[NameSpace.FLIGHTS].flights,\n  (state) => state[NameSpace.STATISTIC].statisticType,\n  (state) => state[NameSpace.STATISTIC].filter,\n  (flights, statisticType, filter) => {\n    const filteredActualFlights = filterByActual(flights);\n    const filteredPlannedFlights = filterByPlanned(flights);\n    const actualChartData = getGroupedData(\n      filteredActualFlights,\n      statisticType,\n      filter\n    );\n    const plannedChartData = getGroupedData(\n      filteredPlannedFlights,\n      statisticType,\n      filter\n    );\n    const allData = getAllData(actualChartData, plannedChartData) || [];\n    return allData;\n  }\n);\n\nexport const getYears = createSelector(\n  (state) => state[NameSpace.FLIGHTS].flights,\n  (flights) => {\n    const flightsByYears = groupByYears(flights, \"YEAR\");\n    const years = Object.keys(flightsByYears);\n    return years;\n  }\n);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Typography, Grid, Container } from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  labelFont: {\n    padding: \"5px\",\n    fontSize: \"12px\",\n    fontWeight: 700,\n    borderRadius: \"5px\",\n  },\n  gridItem: {\n    flexBasis: \"33%\",\n    width: \"33%\",\n    flexGrow: \"1\",\n  },\n});\n\nconst BlueSwitch = withStyles({\n  switchBase: {\n    color: \"#4e85f5\",\n    margin: \"0 auto\",\n  },\n  checked: {},\n  track: { backgroundColor: \"#4e85f5\" },\n})(Switch);\n\nconst Toggle = ({ changeHandler, labels }) => {\n  const classes = useStyles();\n  const [leftLabel, rightLabel] = labels;\n\n  const [state, setState] = useState({\n    checkedA: false,\n  });\n\n  const handleChange = (evt) => {\n    setState({ ...state, [evt.target.name]: evt.target.checked });\n    changeHandler();\n  };\n\n  return (\n    <Container style={{ padding: \"0\" }}>\n      <Grid\n        component=\"label\"\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item className={classes.gridItem} style={{ textAlign: \"right\" }}>\n          <Typography\n            className={classes.labelFont}\n            style={\n              !state.checkedA\n                ? { border: \"2px solid #4e85f5\", padding: \"3px\" }\n                : {}\n            }\n            component=\"p\"\n          >\n            {leftLabel}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <BlueSwitch\n            checked={state.checkedA}\n            onChange={handleChange}\n            name=\"checkedA\"\n            inputProps={{ \"aria-label\": \"statistic type toggle\" }}\n            className={classes.switchBase}\n          />\n        </Grid>\n        <Grid item className={classes.gridItem}>\n          <Typography\n            className={classes.labelFont}\n            style={\n              state.checkedA\n                ? { border: \"2px solid #4e85f5\", padding: \"3px\" }\n                : {}\n            }\n            component=\"p\"\n          >\n            {rightLabel}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nToggle.propTypes = {\n  changeHandler: PropTypes.func.isRequired,\n  labels: PropTypes.array.isRequired,\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Typography,\n  Grid,\n  Container,\n} from \"@material-ui/core\";\nimport { ActionCreator } from \"../../store/action\";\nimport { getYears } from \"../../store/selectors\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    justifyContent: `space-between`,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    background: `#ffffff`,\n  },\n  select: {\n    color: `black`,\n    height: `20px`,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SimpleSelect = ({ filter, setFilter, years }) => {\n  const classes = useStyles();\n\n  const handleChange = (evt) => {\n    setFilter(evt.target.value);\n  };\n  if (filter === undefined) {\n    debugger;\n  }\n  return (\n    <Container style={{padding: \"0\"}}>\n      <Grid container className={classes.grid}>\n        <Typography component=\"p\">Выберите год</Typography>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            className={classes.select}\n            labelId=\"select-label\"\n            id=\"select-outlined\"\n            value={filter}\n            defaultValue={filter}\n            onChange={handleChange}\n            label=\"Year\"\n          >\n            {years.map((year, i) => (\n              <MenuItem key={`${year}-${i}`} value={year}>{year}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </Container>\n  );\n};\n\nSimpleSelect.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  years: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  filter: state[NameSpace.STATISTIC].filter,\n  years: getYears(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFilter(filter) {\n    dispatch(ActionCreator.changeFilter(filter));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleSelect);\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport { getChartData } from \"../../store/selectors\";\nimport Toggle from \"../toggle/toggle\";\nimport { Grid } from \"@material-ui/core\";\nimport { ActionCreator } from \"../../store/action\";\nimport { StatisticType } from \"../../const\";\nimport Select from \"../select/select\";\n\nconst times = [\"Время работы\", \"Время налёта\"];\nconst intervals = [\"Годы\", \"Месяцы\"];\n\nconst Chart = ({ chartData, toggleStatisticType }) => {\n  let viewPortWidth;\n  if (window.innerWidth !== undefined) {\n    viewPortWidth = window.innerWidth;\n  } else {\n    viewPortWidth = document.documentElement.clientWidth;\n  }\n  console.log(viewPortWidth);\n\n  const [isTimeToggled, setTimeToggle] = useState(false);\n  const [isStatisticTypeToggled, setStatisticToggle] = useState(false);\n  const bootomGap = isStatisticTypeToggled\n    ? { marginBottom: \"0\" }\n    : { marginBottom: \"30px\" };\n\n  const handleChangeToggle = useCallback(() => {\n    setTimeToggle(!isTimeToggled);\n  }, [isTimeToggled]);\n\n  const handleStatisticToggle = useCallback(() => {\n    setStatisticToggle(!isStatisticTypeToggled);\n  }, [isStatisticTypeToggled]);\n\n  useEffect(() => {\n    toggleStatisticType(\n      isStatisticTypeToggled ? StatisticType.MONTHS : StatisticType.YEARS\n    );\n  }, [isStatisticTypeToggled, toggleStatisticType]);\n\n  return (\n    <Grid container>\n      <Toggle changeHandler={handleStatisticToggle} labels={intervals} />\n      <Toggle\n        style={bootomGap}\n        changeHandler={handleChangeToggle}\n        labels={times}\n      />\n      <Grid\n        item\n        style={{ padding: \"10px 0\", minHeight: \"50px\", minWidth: \"100%\" }}\n      >\n        {isStatisticTypeToggled && <Select />}\n      </Grid>\n\n      <Grid\n        item\n        style={{ padding: \"10px 0\", minHeight: \"300px\", minWidth: \"100%\" }}\n      >\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n          <ResponsiveContainer>\n            <BarChart\n              width={280}\n              height={320}\n              data={chartData}\n              margin={{ left: -25, right: 10 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Legend wrapperStyle={{ position: 'relative' }} layout=\"horizontal\" verticalAlign=\"bottom\" align=\"right\"/>\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n\n              {isTimeToggled && (\n                <Bar\n                  barSize={10}\n                  dataKey=\"actualTimeFlight\"\n                  name=\"Фактическое время налета\"\n                  stackId=\"a\"\n                  fill=\"rgb(78, 133, 245)\"\n                />\n              )}\n              {isTimeToggled && (\n                <Bar\n                  barSize={10}\n                  dataKey=\"plannedTimeFlight\"\n                  name=\"Плановое время налета\"\n                  stackId=\"a\"\n                  fill=\"rgba(78, 133, 245, 0.6)\"\n                />\n              )}\n              {!isTimeToggled && (\n                <Bar\n                  barSize={10}\n                  dataKey=\"actualTimeWork\"\n                  name=\"Фактическое время работы\"\n                  stackId=\"a\"\n                  fill=\"rgb(78, 133, 245)\"\n                />\n              )}\n              {!isTimeToggled && (\n                <Bar\n                  barSize={10}\n                  dataKey=\"plannedTimeWork\"\n                  name=\"Плановое время работы\"\n                  stackId=\"a\"\n                  fill=\"rgba(78, 133, 245, 0.6)\"\n                />\n              )}\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nChart.propTypes = {\n  chartData: PropTypes.array.isRequired,\n  toggleStatisticType: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  chartData: getChartData(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleStatisticType(type) {\n    dispatch(ActionCreator.changeStatisticType(type));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);\n","import React from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport Chart from \"../chart/chart\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  label: {\n    color: \"#676565\",\n    fontWeight: 400,\n    fontSize: \"12px\",\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n  expandIcon: {\n    position: \"relative\",\n    color: \"#4e85f5\",\n  },\n});\n\nconst FlightStatistic = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Typography className={classes.label}>\n        Общая статистика налета и рабочего времени\n      </Typography>\n      <Chart />\n    </Grid>\n  );\n};\n\nexport default FlightStatistic;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Container,\n  Box,\n  Typography,\n  useMediaQuery,\n  Grid,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport User from \"../user/user\";\nimport NextFlight from \"../next-flight/next-flight\";\nimport AccordionContainer from \"../accordion-container/accordion-container\";\nimport FlightStatistic from \"../flight-statistic/flight-statistic\";\n\nconst useStyles = makeStyles({\n  header: {\n    background: \"#4e85f5\",\n    padding: \"28px 0 8px 20px\",\n  },\n  main: {\n    padding: \"15px 20px 13px 20px\",\n  },\n});\n\nconst MainPage = ({ history }) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n\n  return (\n    <>\n      <Box className={classes.header}>\n        <Container maxWidth=\"xs\">\n          <Typography\n            color=\"textPrimary\"\n            variant={matches ? \"h4\" : \"h5\"}\n            component=\"h1\"\n            gutterBottom\n          >\n            Профиль\n          </Typography>\n        </Container>\n      </Box>\n      <Box className={classes.main}>\n        <Grid container>\n          <User />\n          <NextFlight />\n          <AccordionContainer\n            style={{ width: \"350px\" }}\n            renderDetails={() => <FlightStatistic />}\n          >\n            Статистика налёта\n          </AccordionContainer>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nMainPage.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport { Container, Box, Typography, useMediaQuery } from \"@material-ui/core\";\nimport Chart from \"../chart/chart\";\n\nconst DetailsPage = () => {\n  const matches = useMediaQuery(`(min-width: 600px)`);\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Box my={4} textAlign=\"center\">\n        <Typography variant={matches ? \"h4\" : \"h5\"} component=\"h2\" gutterBottom>\n          Детали\n        </Typography>\n        <Box minHeight=\"400px\">\n          <Chart my={4} />\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default DetailsPage;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { ActionCreator } from \"../../store/action\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport { AppRoute } from \"../../const\";\nimport MainPage from \"../main-page/main-page\";\nimport DetailsPage from \"../details-page/details-page\";\nimport { createMuiTheme, ThemeProvider, CssBaseline } from \"@material-ui/core\";\n\nconst App = ({ isFlightsLoaded, getFlights }) => {\n  const theme = createMuiTheme({\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          body: {\n            backgroundColor: \"#ffffff\",\n          },\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: \"#e5e5e5\",\n      },\n      secondary: {\n        main: \"#4e85f5\",\n      },\n      text: {\n        primary: \"#ffffff\",\n        secondary: \"#000000\",\n        third: \"#676565\",\n      },\n    },\n    background: {\n      default: \"#e5e5e5\",\n    },\n    typography: {\n      body1: {\n        fontWeight: 400,\n        color: \"#000000\",\n      },\n      body2: {\n        fontWeight: 700,\n        color: \"#676565\",\n      },\n      h5: {\n        fontWeight: 700,\n      },\n    },\n    spacing: 2,\n  });\n\n  useEffect(() => {\n    if (!isFlightsLoaded) {\n      getFlights();\n    }\n  }, [isFlightsLoaded, getFlights]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path={AppRoute.MAIN}\n            render={(props) => <MainPage history={props.history} />}\n          ></Route>\n          <Route exact path={AppRoute.DETAILS} render={() => <DetailsPage />} />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nApp.propTypes = {\n  isFlightsLoaded: PropTypes.bool.isRequired,\n  getFlights: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isFlightsLoaded: state[NameSpace.FLIGHTS].isFlightsLoaded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getFlights() {\n    dispatch(ActionCreator.loadFlights());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport App from \"./components/app/app\";\nimport root from \"./store/reducers/root\";\n\nconst store = createStore(root, composeWithDevTools());\n\nrender(\n  <Provider store={store}>\n\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}