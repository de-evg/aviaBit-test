{"version":3,"sources":["const.js","components/user/user.jsx","store/action.js","helpers/sort.js","helpers/statistic.js","helpers/flights.js","helpers/adapter.js","store/reducers/flights/flights.js","store/reducers/statistic/statistic.js","store/reducers/root.js","components/next-flight/next-flight.jsx","components/accordion-container/accordion-container.jsx","store/selectors.js","components/toggle/toggle.jsx","components/select/select.js","components/chart/chart.jsx","components/flight-statistic/flight-statistic.jsx","components/btn/btn.jsx","components/no-planned-flights/no-planned-flights.jsx","components/page-header/page-header.jsx","components/main-page/main-page.jsx","components/details-table/details-table.jsx","components/collapsible-table-row/collabsible-table-row.jsx","components/collapsible-table/collapsible-table.jsx","components/btn-back/btn-back.jsx","components/details-page/details-page.jsx","components/app/app.jsx","api/api.js","index.jsx","store/api-actions.js"],"names":["AppRoute","APIRoute","StatisticType","months","useStyles","makeStyles","root","marginBottom","userName","color","fontWeight","userMail","User","classes","matches","useMediaQuery","Grid","container","spacing","wrap","alignContent","item","className","style","margin","Avatar","alt","width","height","src","alignItems","Typography","variant","ActionType","ActionCreator","flights","type","payload","filter","stats","sortByDate","flightA","flightB","dateFlight","Interval","MONTH","date","getMonth","YEAR","getFullYear","groupByYears","statisticType","reduce","result","flight","year","push","groupByMonths","flightsByYears","Month","month","MonthMap","filterByPlanned","convertToChartData","years","Object","keys","statisticByYears","yearStatistic","time","timeFlight","timeWork","timeBlock","timeNight","timeBiologicalNight","name","interval","statisticByMonths","monthStatistic","getGroupedData","convertSecToHours","sec","Math","floor","generateChartData","filteredActualFlights","filterByActual","filteredPlannedFlights","actualFlights","plannedFlights","actualChartData","plannedChartData","intervals","Set","forEach","add","statisctic","actualFlight","data","plannedFlight","length","actualTimeFlight","actualTimeWork","actualTimeBlock","actualTimeNight","actualTimeBiologicalNight","plannedTimeFlight","plannedTimeWork","plannedTimeBlock","plannedTimeNight","plannedTimeBiologicalNight","getAllData","getNextFlight","currentDate","Date","flightsByMonths","dayX","sort","slice","findNextFlight","adaptServerToClient","initialState","isFlightsLoaded","nextFlight","flightNumber","plnType","pln","isNextFlightFinded","noNextFlight","statsByInterval","NameSpace","combineReducers","state","action","apdaptedFlights","map","grid","borderBottom","paddingBottom","card","boxShadow","media","maxWidth","backgroundSize","row","display","justifyContent","th","border","paddingLeft","paddingTop","td","paddingRight","createData","connect","dispatch","searchNextFlight","useState","flightData","setFlightData","useEffect","toLocaleTimeString","getDate","rows","Card","align","CardMedia","component","image","title","CardContent","padding","Table","TableBody","TableRow","TableCell","boxSizing","accordionItem","label","expandIcon","position","AccordionContainer","children","renderDetails","Accordion","AccordionSummary","aria-controls","id","AccordionDetails","getChartData","createSelector","getYears","findYears","labelFont","fontSize","borderRadius","gridItem","flexBasis","flexGrow","BlueSwitch","withStyles","switchBase","checked","track","backgroundColor","Switch","Toggle","changeHandler","labels","leftLabel","rightLabel","checkedA","setState","Container","justify","textAlign","onChange","evt","target","inputProps","theme","formControl","minWidth","background","select","selectEmpty","marginTop","setFilter","FormControl","Select","labelId","value","defaultValue","i","MenuItem","times","chartData","toggleStatisticType","history","useHistory","isTimeToggled","setTimeToggle","isStatisticTypeToggled","setStatisticToggle","bootomGap","handleChangeToggle","useCallback","handleStatisticToggle","handleBarClick","window","scrollTo","minHeight","ResponsiveContainer","BarChart","left","right","CartesianGrid","strokeDasharray","Legend","wrapperStyle","layout","verticalAlign","XAxis","dataKey","YAxis","Bar","onClick","barSize","stackId","fill","FlightStatistic","button","textTransform","Btn","clickHandler","Button","NoPlannedFlights","header","PageHeader","Box","gutterBottom","main","flexDirection","isChartShowed","setChartShowStatus","handleShowChartBtnClick","direction","DetailsTable","TableContainer","Paper","mapFlightParam","from","fromLat","fromLong","to","toLat","toLong","Row","React","open","setOpen","rowKeys","Fragment","IconButton","aria-label","size","scope","colSpan","Collapse","in","timeout","unmountOnExit","key","CollapsibleTable","takeoff","landing","toLocaleString","lat","long","generateRows","TableHead","resetStats","preventDefault","updateStatsInterval","match","params","flightsForInterval","setFlightsForInterval","setStatisticType","actualDataRows","plannedDataRows","groupedData","index","findIndex","App","createMuiTheme","overrides","MuiCssBaseline","body","palette","primary","secondary","text","default","typography","body1","body2","h5","ThemeProvider","CssBaseline","exact","path","render","props","Method","SuccessHTTPStatusRange","api","endPoint","this","_endPoint","url","_load","then","Api","toJSON","catch","err","console","log","method","headers","Headers","mode","fetch","checkStatus","response","status","Error","statusText","json","store","createStore","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","Promise","all","_getState","getFlights","document","getElementById"],"mappings":"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","file":"static/js/main.79cd0229.chunk.js","sourcesContent":["export const AppRoute = {\n  MAIN: \"/\",\n  DETAILS: \"/details\",\n};\n\nexport const APIRoute = {\n  FETCH_FLIGHTS: \"/flights\"\n};\n\nexport const StatisticType = {\n  YEARS: \"YEARS\",\n  MONTHS: \"MONTHS\",\n};\n\nexport const months = [\n  \"JAN\",\n  \"FEB\",\n  \"MAR\",\n  \"APR\",\n  \"MAY\",\n  \"JUN\",\n  \"JUL\",\n  \"AUG\",\n  \"SEP\",\n  \"OCT\",\n  \"NOV\",\n  \"DEC\",\n];\n","import React from \"react\";\nimport { Typography, Avatar, Grid, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: \"13px\",\n  },\n  userName: {\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst User = () => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n\n  return (\n    <Grid\n      container\n      spacing={5}\n      wrap=\"nowrap\"\n      alignContent=\"space-between\"\n      item\n      className={classes.root}\n      style={matches ? {margin: \"29px 0\"} : null}\n    >\n      <Grid item>\n        <Avatar\n          alt=\"Sheldon Cooper\"\n          style={{ width: \"60px\", height: \"60px\" }}\n          src=\"./img/avatar.jpg\"\n        />\n      </Grid>\n      <Grid container alignItems=\"center\" item>\n        <Grid item>\n          <Typography className={classes.userName} variant=\"body1\">\n            Шелдон Купер\n          </Typography>\n          <Typography className={classes.userMail} variant=\"body2\">\n            sheldon.cooper@gmail.com\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default User;\n","export const ActionType = {\n  LOAD_FLIGHTS: \"LOAD_FLIGHTS\",\n  CHANGE_STATISTIC_TYPE: \"CHANGE_STATISTIC_TYPE\",\n  CHANGE_FILTER: \"CHANGE_FILTER\",\n  SEARCH_NEXT_FLIGHT: \"SEARCH_NEXT_FLIGHT\",\n  CHANGE_STATS: \"CHANGE_STATS\",\n  RESET_STATS: \"RESET_STATS\"\n};\n\nexport const ActionCreator = {\n  loadFlights: (flights) => ({\n    type: \"LOAD_FLIGHTS\",\n    payload: flights\n  }),\n  changeStatisticType: (type) => ({\n    type: \"CHANGE_STATISTIC_TYPE\",\n    payload: type\n  }),\n  changeFilter: (filter) => ({\n    type: \"CHANGE_FILTER\",\n    payload: filter\n  }),\n  setNextFlight: () => ({\n    type: \"SEARCH_NEXT_FLIGHT\",\n  }),\n  setStatsInterval: (stats) => ({\n    type: \"CHANGE_STATS\",\n    payload: stats\n  }),\n  resetStatsInterval: ()=> ({\n    type: \"RESET_STATS\"\n  })\n};\n","export const sortByDate = (flightA, flightB) => {\n  if (flightA.dateFlight - flightB.dateFlight > 0) {\n    return 1;\n  }\n\n  if (flightA.dateFlight - flightB.dateFlight < 0) {\n    return -1;\n  }\n\n  return 0;\n};\n","import { StatisticType, months } from \"../const\";\n\nconst Interval = {\n  MONTH: (date) => date.getMonth(),\n  YEAR: (date) => date.getFullYear(),\n};\n\nexport const findYears = (flights) => {\n  const flightsByYears = groupByYears(flights, \"YEAR\");\n  const years = Object.keys(flightsByYears);\n  return years;\n};\n\nexport const groupByYears = (flights, statisticType) => {\n  return flights.reduce((result, flight) => {\n    const year = Interval[statisticType](flight.dateFlight);\n    result[year] = result[year] || [];\n    result[year].push(flight);\n    return result;\n  }, {});\n};\n\nexport const groupByMonths = (flightsByYears, statisticType, year) => {\n  const Month = months.reduce((result, month) => {\n    result[month] = [];\n    return result;\n  }, {});\n\n  if (!flightsByYears[year]) {\n    return Month;\n  }\n  return flightsByYears[year].reduce((MonthMap, flight) => {\n    const monthName = months[Interval[statisticType](flight.dateFlight)];\n    MonthMap[monthName].push(flight);\n\n    return MonthMap;\n  }, Month);\n};\n\nexport const filterByActual = (flights) =>\n  flights.filter((flight) => !flight.type);\nexport const filterByPlanned = (flights) =>\n  flights.filter((flight) => !!flight.type);\n\nexport const convertToChartData = (flights, statisticType, filter) => {\n  const years = Object.keys(flights);\n  switch (statisticType) {\n    case StatisticType.YEARS:\n      return years.reduce((statisticByYears, year) => {\n        const yearStatistic = flights[year].reduce(\n          (time, flight) => {\n            time.timeFlight += flight.timeFlight || 0;\n            time.timeWork += flight.timeWork || 0;\n            time.timeBlock += flight.timeBlock || 0;\n            time.timeNight += flight.timeNight || 0;\n            time.timeBiologicalNight += flight.timeBiologicalNight || 0;\n            return time;\n          },\n          {\n            timeFlight: 0,\n            timeWork: 0,\n            timeBlock: 0,\n            timeNight: 0,\n            timeBiologicalNight: 0,\n            name: year,\n            interval: year,\n          }\n        );\n\n        statisticByYears.push(yearStatistic);\n        return statisticByYears;\n      }, []);\n\n    case StatisticType.MONTHS:\n      return months.reduce((statisticByMonths, month) => {\n        const monthStatistic = flights[month].reduce(\n          (time, flight) => {\n            time.timeFlight += flight.timeFlight || 0;\n            time.timeWork += flight.timeWork || 0;\n            time.timeBlock += flight.timeBlock || 0;\n            time.timeNight += flight.timeNight || 0;\n            time.timeBiologicalNight += flight.timeBiologicalNight || 0;\n            return time;\n          },\n          {\n            timeFlight: 0,\n            timeWork: 0,\n            timeBlock: 0,\n            timeNight: 0,\n            timeBiologicalNight: 0,\n            name: month,\n            interval: `${month} ${filter}`,\n          }\n        );\n        statisticByMonths.push(monthStatistic);\n        return statisticByMonths;\n      }, []);\n\n    default:\n      return flights;\n  }\n};\n\nexport const getGroupedData = (flights, statisticType, filter) => {\n  const flightsByYears = groupByYears(flights, \"YEAR\");\n  const result =\n    statisticType === StatisticType.YEARS\n      ? flightsByYears\n      : groupByMonths(flightsByYears, \"MONTH\", filter);\n  return result;\n};\n\nconst convertSecToHours = (sec) => Math.floor(sec / 3600);\n\nexport const getAllData = (actualChartData, plannedChartData) => {\n  const intervals = new Set();\n  actualChartData.forEach((flight) => {\n    intervals.add(flight.name);\n  });\n  plannedChartData.forEach((flight) => {\n    intervals.add(flight.name);\n  });\n\n  const allData = [...intervals].reduce((result, interval) => {\n    const statisctic = {};\n    const actualFlight = actualChartData.filter(\n      (data) => data.name === interval\n    );\n    const plannedFlight = plannedChartData.filter(\n      (data) => data.name === interval\n    );\n    if (actualFlight.length) {\n      statisctic.actualTimeFlight = convertSecToHours(\n        actualFlight[0].timeFlight\n      );\n      statisctic.actualTimeWork = convertSecToHours(actualFlight[0].timeWork);\n      statisctic.actualTimeBlock = convertSecToHours(actualFlight[0].timeBlock);\n      statisctic.actualTimeNight = convertSecToHours(actualFlight[0].timeNight);\n      statisctic.actualTimeBiologicalNight = convertSecToHours(\n        actualFlight[0].timeBiologicalNight\n      );\n      statisctic.interval = actualFlight[0].interval;\n    }\n    if (plannedFlight.length) {\n      statisctic.plannedTimeFlight = convertSecToHours(\n        plannedFlight[0].timeFlight\n      );\n      statisctic.plannedTimeWork = convertSecToHours(plannedFlight[0].timeWork);\n      statisctic.plannedTimeBlock = convertSecToHours(\n        plannedFlight[0].timeBlock\n      );\n      statisctic.plannedTimeNight = convertSecToHours(\n        plannedFlight[0].timeNight\n      );\n      statisctic.plannedTimeBiologicalNight = convertSecToHours(\n        plannedFlight[0].timeBiologicalNight\n      );\n      statisctic.interval = plannedFlight[0].interval;\n    }\n    statisctic.name = interval;\n    result.push(statisctic);\n    return result;\n  }, []);\n  return allData;\n};\n\nexport const generateChartData = (flights, statisticType, filter) => {\n  const filteredActualFlights = filterByActual(flights);\n    const filteredPlannedFlights = filterByPlanned(flights);\n    const actualFlights = getGroupedData(\n      filteredActualFlights,\n      statisticType,\n      filter\n    );\n    const plannedFlights = getGroupedData(\n      filteredPlannedFlights,\n      statisticType,\n      filter\n    );\n\n    const actualChartData = convertToChartData(actualFlights, statisticType, filter);\n    const plannedChartData = convertToChartData(plannedFlights, statisticType, filter);\n\n    const allData = getAllData(actualChartData, plannedChartData) || [];\n    return allData;\n};\n","import { sortByDate } from \"./sort\";\nimport { months } from \"../const\";\nimport { filterByPlanned, groupByYears, groupByMonths } from \"./statistic\";\n\nconst NEXT_YEAR = 12;\n\nconst findNextFlight = (flights) => {\n  const currentDate = new Date();\n  let [year, month] = [\n    currentDate.getFullYear(),\n    months[currentDate.getMonth()],\n  ];\n  const flightsByYears = groupByYears(flights, \"YEAR\");\n  const flightsByMonths = groupByMonths(flightsByYears, \"MONTH\", year);\n  let dayX = flightsByMonths[month]\n    .filter((flight) => flight.dateFlight > currentDate)\n    .sort(sortByDate)\n    .slice(-1)[0];\n\n  while (!dayX) {\n    month = currentDate.getMonth() + 1;\n    if (month === NEXT_YEAR) {\n      dayX = \"not found\"\n      break;\n    }\n    dayX = flightsByMonths[months[month]]\n      .filter((flight) => flight.dateFlight > currentDate)\n      .sort(sortByDate)\n      .slice(-1)[0];\n  }\n\n  return dayX;\n};\n\nexport const getNextFlight = (flights) => {\n  const filteredPlannedFlights = filterByPlanned(flights);\n  if (!filteredPlannedFlights.length) {\n    return \"not found\";\n  }\n  const nextFlight = findNextFlight(filteredPlannedFlights);\n  return nextFlight;\n};\n","export const adaptServerToClient = (flight) => ({\n  ...flight,\n  dateFlight: new Date(flight.dateFlight),\n});\n","import { ActionType } from \"../../action\";\nimport { getNextFlight } from \"../../../helpers/flights\";\nimport { adaptServerToClient } from \"../../../helpers/adapter\";\n\nconst initialState = {\n  flights: [],\n  isFlightsLoaded: false,\n  nextFlight: {\n    date: \"\",\n    flightNumber: \"\",\n    plnType: \"\",\n    pln: \"\",\n  },\n  isNextFlightFinded: false,\n  noNextFlight: false,\n};\n\nexport const flightsData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.LOAD_FLIGHTS:\n      const apdaptedFlights = action.payload.map((flight) =>\n        adaptServerToClient(flight)\n      );\n      return { ...state, flights: apdaptedFlights, isFlightsLoaded: true };\n    case ActionType.SEARCH_NEXT_FLIGHT:\n      const nextFlight = getNextFlight(state.flights);\n      if (nextFlight === \"not found\") {\n        return {\n          ...state,\n          nextFlight: {\n            date: \"\",\n            flightNumber: \"\",\n            plnType: \"\",\n            pln: \"\",\n          },\n          isNextFlightFinded: false,\n          noNextFlight: true,\n        };\n      }\n      return { ...state, nextFlight: nextFlight, isNextFlightFinded: true, noNextFlight: false, };\n\n    default:\n      return state;\n  }\n};\n","import {ActionType} from \"../../action\";\nimport {StatisticType} from \"../../../const\";\n\nconst initialState = {\n  statisticType: StatisticType.YEARS,\n  filter: new Date().getFullYear(),\n  statsByInterval: {\n    actualTimeBiologicalNight: 0,\n    actualTimeBlock: 0,\n    actualTimeFlight: 0,\n    actualTimeNight: 0,\n    actualTimeWork: 0,\n    name: \"\",\n    interval: \"\",\n    plannedTimeBiologicalNight: 0,\n    plannedTimeBlock: 0,\n    plannedTimeFlight: 0,\n    plannedTimeNight: 0,\n    plannedTimeWork: 0,\n  },\n};\n\nexport const statisticData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.CHANGE_STATISTIC_TYPE:\n      return {...state, statisticType: action.payload};\n    case ActionType.CHANGE_FILTER:\n      return {...state, filter: action.payload};\n    case ActionType.CHANGE_STATS:\n      return {...state, statsByInterval: action.payload};\n    case ActionType.RESET_STATS:\n      return {\n        ...state, statsByInterval: {\n          actualTimeBiologicalNight: 0,\n          actualTimeBlock: 0,\n          actualTimeFlight: 0,\n          actualTimeNight: 0,\n          actualTimeWork: 0,\n          name: \"\",\n          interval: \"\",\n          plannedTimeBiologicalNight: 0,\n          plannedTimeBlock: 0,\n          plannedTimeFlight: 0,\n          plannedTimeNight: 0,\n          plannedTimeWork: 0,\n        },\n      }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { flightsData } from \"./flights/flights\";\nimport { statisticData } from \"./statistic/statistic\";\n\nexport const NameSpace = {\n  FLIGHTS: `FLIGHTS`,\n  STATISTIC: `STATISTIC`,\n};\n\nexport default combineReducers({\n  [NameSpace.FLIGHTS]: flightsData,\n  [NameSpace.STATISTIC]: statisticData,\n});\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  TableBody,\n  TableRow,\n  TableCell,\n  Table,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport { months } from \"../../const\";\nimport { ActionCreator } from \"../../store/action\";\n\nconst useStyles = makeStyles({\n  grid: {\n    width: \"100%\",\n    borderBottom: \"1px solid rgba(16, 66, 195, 0.15)\",\n    paddingBottom: \"24px\",\n  },\n  card: {\n    boxShadow: \"none\",\n  },\n  media: {\n    maxWidth: \"257px\",\n    marginBottom: \"15px\",\n    backgroundSize: \"contain\",\n  },\n  row: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"9px\",\n  },\n  th: {\n    border: \"none\",\n    paddingLeft: 0,\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  td: {\n    border: \"none\",\n    paddingRight: 0,\n    paddingTop: \"5px\",\n    paddingBottom: \"5px\",\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst createData = (name, data) => {\n  return { name, data };\n};\n\nconst NextFlight = ({\n  nextFlight,\n  isNextFlightFinded,\n  searchNextFlight,\n  isFlightsLoaded,\n}) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n\n  const [flightData, setFlightData] = useState({\n    date: \"\",\n    flightNumber: \"\",\n    plnType: \"\",\n    pln: \"\",\n  });\n  const { date, flightNumber, plnType, pln } = flightData;\n\n  useEffect(() => {\n    if (!isNextFlightFinded && isFlightsLoaded) {\n      searchNextFlight();\n    }\n  }, [isNextFlightFinded, searchNextFlight, isFlightsLoaded]);\n\n  useEffect(() => {\n    if (isNextFlightFinded) {\n      setFlightData({\n        date: `${nextFlight.dateFlight\n          .toLocaleTimeString()\n          .slice(0, 5)} ${nextFlight.dateFlight.getDate()} ${\n          months[nextFlight.dateFlight.getMonth()]\n        } ${nextFlight.dateFlight.getFullYear()}`,\n        flightNumber: nextFlight.flight,\n        plnType: nextFlight.plnType,\n        pln: nextFlight.pln,\n      });\n    }\n  }, [isNextFlightFinded, nextFlight, setFlightData]);\n\n  const rows = [\n    createData(\"Дата рейса\", date),\n    createData(\"Номер рейса\", flightNumber),\n    createData(\"Тип воздушного судна\", plnType),\n    createData(\"Бортовой номер судна\", pln),\n  ];\n\n  return !isNextFlightFinded ? (\n    <p>Загрузка...</p>\n  ) : (\n    <Grid\n      item\n      className={classes.grid}\n      style={matches ? { borderBottom: \"none\" } : null}\n    >\n      <Card className={classes.card} align=\"center\">\n        <CardMedia\n          component=\"img\"\n          alt=\"Plane type\"\n          width={matches ? 372 : 257}\n          height={matches ? 104 : 89}\n          image=\"./img/plane.png\"\n          title=\"Plane type\"\n          className={classes.media}\n          style={matches ? { maxWidth: \"372px\" } : null}\n        />\n      </Card>\n      <CardContent style={{ padding: 0 }}>\n        <Table>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name} className={classes.row}>\n                <TableCell component=\"th\" variant=\"head\" className={classes.th}>\n                  {row.name}\n                </TableCell>\n\n                <TableCell variant=\"body\" className={classes.td} align=\"right\">\n                  {row.data}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Grid>\n  );\n};\n\nNextFlight.propTypes = {\n  nextFlight: PropTypes.object.isRequired,\n  searchNextFlight: PropTypes.func.isRequired,\n  isFlightsLoaded: PropTypes.bool.isRequired,\n  isNextFlightFinded: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  nextFlight: state[NameSpace.FLIGHTS].nextFlight,\n  isFlightsLoaded: state[NameSpace.FLIGHTS].isFlightsLoaded,\n  isNextFlightFinded: state[NameSpace.FLIGHTS].isNextFlightFinded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  searchNextFlight() {\n    dispatch(ActionCreator.setNextFlight());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextFlight);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Typography,\n  Grid,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    boxSizing: \"content-box\",\n    boxShadow: \"none\",\n    maxWidth: \"100%\",\n  },\n  accordionItem: {\n    padding: \"0\",\n  },\n  label: {\n    fontWeight: 700,\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n  expandIcon: {\n    position: \"relative\",\n    color: \"#4e85f5\",\n  },\n});\n\nconst AccordionContainer = ({ children, renderDetails }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item>\n      <Accordion className={classes.root}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon} />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={classes.accordionItem}\n        >\n          <Typography className={classes.label}>{children}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.accordionItem}>\n          {renderDetails()}\n        </AccordionDetails>\n      </Accordion>\n    </Grid>\n  );\n};\n\nAccordionContainer.propTypes = {\n  children: PropTypes.string.isRequired,\n  renderDetails: PropTypes.func.isRequired,\n};\n\nexport default AccordionContainer;\n","import {createSelector} from \"reselect\";\nimport {NameSpace} from \"./reducers/root\";\nimport {\n  findYears,\n  generateChartData,\n} from \"../helpers/statistic\";\n\nexport const getChartData = createSelector(\n  (state) => state[NameSpace.FLIGHTS].flights,\n  (state) => state[NameSpace.STATISTIC].statisticType,\n  (state) => state[NameSpace.STATISTIC].filter,\n  (flights, statisticType, filter) => {\n    return generateChartData(flights, statisticType, filter);\n  }\n);\n\nexport const getYears = createSelector(\n  (state) => state[NameSpace.FLIGHTS].flights,\n  (flights) => {\n    return findYears(flights);\n  }\n);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Typography, Grid, Container } from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  labelFont: {\n    padding: \"5px\",\n    fontSize: \"12px\",\n    fontWeight: 700,\n    borderRadius: \"5px\",\n  },\n  gridItem: {\n    flexBasis: \"33%\",\n    width: \"33%\",\n    flexGrow: \"1\",\n  },\n});\n\nconst BlueSwitch = withStyles({\n  switchBase: {\n    color: \"#4e85f5\",\n    margin: \"0 auto\",\n  },\n  checked: {},\n  track: { backgroundColor: \"#4e85f5\" },\n})(Switch);\n\nconst Toggle = ({ changeHandler, labels }) => {\n  const classes = useStyles();\n\n  const [leftLabel, rightLabel] = labels;\n\n  const [state, setState] = useState({\n    checkedA: false,\n  });\n\n  const handleChange = (evt) => {\n    setState({ ...state, [evt.target.name]: evt.target.checked });\n    changeHandler();\n  };\n\n  return (\n    <Container style={{ padding: \"0\" }}>\n      <Grid\n        component=\"label\"\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item className={classes.gridItem} style={{ textAlign: \"right\" }}>\n          <Typography\n            className={classes.labelFont}\n            component=\"p\"\n          >\n            {leftLabel}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <BlueSwitch\n            checked={state.checkedA}\n            onChange={handleChange}\n            name=\"checkedA\"\n            inputProps={{ \"aria-label\": \"statistic type toggle\" }}\n            className={classes.switchBase}\n          />\n        </Grid>\n        <Grid item className={classes.gridItem}>\n          <Typography\n            className={classes.labelFont}\n            component=\"p\"\n          >\n            {rightLabel}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nToggle.propTypes = {\n  changeHandler: PropTypes.func.isRequired,\n  labels: PropTypes.array.isRequired,\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Typography,\n  Grid,\n  Container,\n} from \"@material-ui/core\";\nimport { ActionCreator } from \"../../store/action\";\nimport { getYears } from \"../../store/selectors\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    justifyContent: `space-between`,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    background: `#ffffff`,\n  },\n  select: {\n    color: `black`,\n    height: `20px`,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SimpleSelect = ({ filter, setFilter, years }) => {\n  const classes = useStyles();\n\n  const handleChange = (evt) => {\n    setFilter(+evt.target.value);\n  };\n  if (filter === undefined) {\n    debugger;\n  }\n  return (\n    <Container style={{padding: \"0\"}}>\n      <Grid container className={classes.grid}>\n        <Typography component=\"p\">Выберите год</Typography>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            className={classes.select}\n            labelId=\"select-label\"\n            id=\"select-outlined\"\n            value={filter}\n            defaultValue={filter}\n            onChange={handleChange}\n            label=\"Year\"\n          >\n            {years.map((year, i) => (\n              <MenuItem key={`${year}-${i}`} value={year}>{year}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </Container>\n  );\n};\n\nSimpleSelect.propTypes = {\n  filter: PropTypes.number.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  years: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  filter: state[NameSpace.STATISTIC].filter,\n  years: getYears(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFilter(filter) {\n    dispatch(ActionCreator.changeFilter(filter));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleSelect);\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport { getChartData } from \"../../store/selectors\";\nimport Toggle from \"../toggle/toggle\";\nimport { Grid } from \"@material-ui/core\";\nimport { ActionCreator } from \"../../store/action\";\nimport { AppRoute, StatisticType } from \"../../const\";\nimport Select from \"../select/select\";\nimport {useHistory} from \"react-router\";\n\nconst times = [\"Время работы\", \"Время налёта\"];\nconst intervals = [\"Годы\", \"Месяцы\"];\n\nconst Chart = ({ chartData, toggleStatisticType }) => {\n  let history = useHistory();\n\n  const [isTimeToggled, setTimeToggle] = useState(false);\n  const [isStatisticTypeToggled, setStatisticToggle] = useState(false);\n  const bootomGap = isStatisticTypeToggled\n    ? { marginBottom: \"0\" }\n    : { marginBottom: \"30px\" };\n\n  const handleChangeToggle = useCallback(() => {\n    setTimeToggle(!isTimeToggled);\n  }, [isTimeToggled]);\n\n  const handleStatisticToggle = useCallback(() => {\n    setStatisticToggle(!isStatisticTypeToggled);\n  }, [isStatisticTypeToggled]);\n\n  useEffect(() => {\n    toggleStatisticType(\n      isStatisticTypeToggled ? StatisticType.MONTHS : StatisticType.YEARS\n    );\n  }, [isStatisticTypeToggled, toggleStatisticType]);\n\n  const handleBarClick = useCallback((evt) => {\n    history.push(`${AppRoute.DETAILS}/${evt.payload.interval}`);\n    window.scrollTo(0, 0);\n  }, [history]);\n\n  return (\n    <Grid container>\n      <Toggle changeHandler={handleStatisticToggle} labels={intervals} />\n      <Toggle\n        style={bootomGap}\n        changeHandler={handleChangeToggle}\n        labels={times}\n      />\n      <Grid\n        item\n        style={{ padding: \"10px 0\", minHeight: \"50px\", minWidth: \"100%\" }}\n      >\n        {isStatisticTypeToggled && <Select />}\n      </Grid>\n\n      <Grid\n        item\n        style={{ padding: \"10px 0\", minHeight: \"300px\", minWidth: \"100%\" }}\n      >\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n          <ResponsiveContainer>\n            <BarChart\n              width={280}\n              height={320}\n              data={chartData}\n              margin={{ left: -25, right: 10 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <Legend\n                wrapperStyle={{ position: \"relative\" }}\n                layout=\"horizontal\"\n                verticalAlign=\"bottom\"\n                align=\"right\"\n              />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n\n              {isTimeToggled && (\n                <Bar\n                  onClick={handleBarClick}\n                  barSize={10}\n                  dataKey=\"actualTimeFlight\"\n                  name=\"Фактическое время налета\"\n                  stackId=\"a\"\n                  fill=\"rgb(78, 133, 245)\"\n                />\n              )}\n              {isTimeToggled && (\n                <Bar\n                  onClick={handleBarClick}\n                  barSize={10}\n                  dataKey=\"plannedTimeFlight\"\n                  name=\"Плановое время налета\"\n                  stackId=\"a\"\n                  fill=\"rgba(78, 133, 245, 0.6)\"\n                />\n              )}\n              {!isTimeToggled && (\n                <Bar\n                  onClick={handleBarClick}\n                  barSize={10}\n                  dataKey=\"actualTimeWork\"\n                  name=\"Фактическое время работы\"\n                  stackId=\"a\"\n                  fill=\"rgb(78, 133, 245)\"\n                />\n              )}\n              {!isTimeToggled && (\n                <Bar\n                  onClick={handleBarClick}\n                  barSize={10}\n                  dataKey=\"plannedTimeWork\"\n                  name=\"Плановое время работы\"\n                  stackId=\"a\"\n                  fill=\"rgba(78, 133, 245, 0.6)\"\n                />\n              )}\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nChart.propTypes = {\n  chartData: PropTypes.array.isRequired,\n  toggleStatisticType: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  chartData: getChartData(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleStatisticType(type) {\n    dispatch(ActionCreator.changeStatisticType(type));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);","import React from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport Chart from \"../chart/chart\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  label: {\n    color: \"#676565\",\n    fontWeight: 400,\n    fontSize: \"12px\",\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n  expandIcon: {\n    position: \"relative\",\n    color: \"#4e85f5\",\n  },\n});\n\nconst FlightStatistic = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Typography className={classes.label}>\n        Общая статистика налета и рабочего времени\n      </Typography>\n      <Chart />\n    </Grid>\n  );\n};\n\nexport default FlightStatistic;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  button: {\n    backgroundColor: \"#f1f1f1\",\n    border: \"1px solid #c4c4c4\",\n    boxShadow: \"none\",\n    textTransform: \"unset\",\n    fontWeight: 700\n  }\n});\n\nconst Btn = ({clickHandler, children}) => {\n  const classes = useStyles();\n  return <Button onClick={clickHandler} variant=\"contained\" className={classes.button}>{children}</Button>;\n};\n\nBtn.propTypes = {\n  clickHandler: PropTypes.func.isRequired,\n  children: PropTypes.string.isRequired\n};\n\nexport default Btn;","import {Typography} from '@material-ui/core'\nimport React from 'react'\n\nconst NoPlannedFlights = () => {\n  return (\n    <Typography>На ближайшее время запланированных полётов не найдено!</Typography>\n  );\n};\n\nexport default NoPlannedFlights;\n","import React from 'react';\nimport {Container, Box, Typography, useMediaQuery} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  header: {\n    backgroundColor: \"#4e85f5\",\n    padding: \"28px 0 8px 20px\",\n  },\n});\n\nconst PageHeader = ({children}) => {\n  const matches = useMediaQuery(`(min-width: 600px)`);\n  const classes = useStyles();\n\n  return (\n    <Box\n      className={classes.header}\n      style={\n        matches\n          ? {background: \"url(/img/wing.png)\", padding: \"50px 0 30px 0\"}\n          : null\n      }\n    >\n      <Container\n        maxWidth={matches ? \"xl\" : \"xs\"}\n        style={matches ? {padding: \"0 17%\"} : null}\n      >\n        <Typography className={classes.title}\n          color={matches ? \"textSecondary\" : \"textPrimary\"}\n          variant={matches ? \"h4\" : \"h5\"}\n          component=\"h1\"\n          gutterBottom>\n          {children}\n        </Typography>\n      </Container>\n    </Box>\n  );\n};\n\nexport default PageHeader;\n","import React, {useCallback, useState} from \"react\";\nimport {\n  Box,\n  useMediaQuery,\n  Grid,\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport User from \"../user/user\";\nimport NextFlight from \"../next-flight/next-flight\";\nimport AccordionContainer from \"../accordion-container/accordion-container\";\nimport FlightStatistic from \"../flight-statistic/flight-statistic\";\nimport Btn from \"../btn/btn\";\nimport Chart from \"../chart/chart\";\nimport {connect} from \"react-redux\";\nimport {NameSpace} from \"../../store/reducers/root\";\nimport NoPlannedFlights from \"../no-planned-flights/no-planned-flights\";\nimport PageHeader from \"../page-header/page-header\";\n\nconst useStyles = makeStyles({\n  main: {\n    padding: \"15px 20px 13px 20px\",\n  },\n  title: {\n    fontWeight: 700,\n    margin: 0,\n  },\n  grid: {\n    flexDirection: \"column\",\n    wrap: \"wrap\",\n  },\n  gridItem: {\n    width: \"100%\",\n  },\n});\n\nconst MainPage = ({noNextFlight}) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n  const [isChartShowed, setChartShowStatus] = useState(false);\n\n  const handleShowChartBtnClick = useCallback(() => {\n    setChartShowStatus(!isChartShowed);\n  }, [isChartShowed]);\n\n  return (\n    <>\n      <PageHeader>Профиль</PageHeader>\n      <Box\n        className={classes.main}\n        style={matches ? {padding: \"0 17%\"} : null}\n      >\n        <Grid\n          container\n          className={classes.grid}\n          style={matches ? {height: \"593px\"} : null}\n        >\n          <Grid\n            item\n            container\n            className={classes.gridItem}\n            style={\n              matches\n                ? {\n                  flexDirection: \"row\",\n                  borderBottom: \"1px solid rgba(16, 66, 195, 0.15)\",\n                }\n                : null\n            }\n          >\n            <Grid item style={{width: \"50%\"}}>\n              <User />\n            </Grid>\n            <Grid\n              item\n              container\n              direction=\"column\"\n              alignItems=\"flex-end\"\n              justify=\"center\"\n              style={{width: \"50%\"}}\n            >\n              {matches && <Btn clickHandler={handleShowChartBtnClick}>Статистика налёта</Btn>}\n            </Grid>\n          </Grid>\n          <Grid container justify=\"space-between\" style={{paddingTop: \"20px\"}}>\n            <Grid\n              item\n              className={classes.gridItem}\n              style={\n                matches ? {width: \"45%\", padding: \"29px 0 33px 0\"} : null\n              }\n            >\n              {noNextFlight ? <NoPlannedFlights /> : <NextFlight />}\n            </Grid>\n            {matches ? null : (\n              <AccordionContainer\n                style={{width: \"350px\"}}\n                renderDetails={() => <FlightStatistic />}\n              >\n                Статистика налёта\n              </AccordionContainer>\n            )}\n            {isChartShowed ? (\n              <Grid\n                item\n                style={\n                  matches\n                    ? {\n                      width: \"45%\",\n                    }\n                    : null\n                }\n              >\n                <Chart />\n              </Grid>\n            ) : null}\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  noNextFlight: state[NameSpace.FLIGHTS].noNextFlight,\n});\n\nexport default connect(mapStateToProps)(MainPage);\n","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Typography,\n  TableContainer,\n  Paper\n} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  row: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n  },\n  th: {\n    border: \"none\",\n    padding: \"10px\",\n    color: \"#000000\",\n    fontWeight: 700\n  },\n  td: {\n    border: \"none\",\n    padding: \"10px\",    \n    color: \"#676565\",\n    fontWeight: 400,\n  },\n  title: {\n    marginBottom: \"5px\"\n  }\n});\n\nconst DetailsTable = ({rows, title}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography\n        className={classes.title}\n        variant=\"h6\"\n        color={\"textSecondary\"}\n        id=\"tableTitle\"\n        component=\"h3\"\n      >\n        {title}\n      </Typography>\n      <TableContainer component={Paper} style={{width: \"100%\"}}>\n        <Table>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name} className={classes.row}>\n                <TableCell component=\"th\" variant=\"head\" className={classes.th}>\n                  {row.name}\n                </TableCell>\n\n                <TableCell variant=\"body\" className={classes.td} align=\"right\">\n                  {row.data}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default DetailsTable;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst mapFlightParam = {\n  dateFlight: \"Дата\",\n  flight: \"Номер рейса\",\n  pln: \"Бортовой номер ВС\",\n  plnType: \"Тип ВС\",\n  from: \"Аэродром взлета\",\n  fromLat: \"Аэродром взлёта - долгота\",\n  fromLong: \"Аэродром взлёта - широта\",\n  to: \"Аэродром посадки\",\n  toLat: \"Аэродром посадки - долгота\",\n  toLong: \"Аэродром посадки - широта\",\n  timeFlight: \"Время налёта\",\n  timeBlock: \"Полётное время\",\n  timeNight: \"Ночное лётное время\",\n  timeBiologicalNight: \"Биологическая ночь\",\n  timeWork: \"Рабочее время\",\n  type: \"Тип налёта\",\n};\n\nconst useStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n  th: {\n    minWidth: \"80px\",\n    fontSize: \"0.7rem\",\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  td: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst Row = ({ row }) => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const rowKeys = Object.keys(row);\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\" className={classes.th}>\n          {row.flight}\n        </TableCell>\n        <TableCell className={classes.td} align=\"right\">\n          {row.dateFlight}\n        </TableCell>\n        <TableCell className={classes.td} align=\"right\">\n          {row.from}\n        </TableCell>\n        <TableCell className={classes.td} align=\"right\">\n          {row.to}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>              \n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableBody>\n                  {rowKeys.map((key) => (\n                    <TableRow key={key} className={classes.row}>\n                      <TableCell\n                        component=\"th\"\n                        variant=\"head\"\n                        className={classes.th}\n                      >\n                        {mapFlightParam[key]}\n                      </TableCell>\n\n                      <TableCell\n                        variant=\"body\"\n                        className={classes.td}\n                        align=\"right\"\n                      >\n                        {row[key]}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nRow.propTypes = {\n  row: PropTypes.object.isRequired\n};\n\nexport default Row;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Row from \"../collapsible-table-row/collabsible-table-row\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n  th: {\n    minWidth: \"80px\",\n    fontSize: \"0.7rem\",\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  td: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n  title: {\n    marginBottom: \"5px\"\n  }\n});\n\nconst createData = (flightData) => {\n  const {\n    dateFlight,\n    flight,\n    takeoff,\n    landing,\n    pln,\n    plnType,\n    timeFlight,\n    timeBlock,\n    timeNight,\n    timeBiologicalNight,\n    timeWork,\n    type,\n  } = flightData;\n  return {\n    dateFlight: dateFlight.toLocaleString(),\n    flight: flight,\n    pln: pln,\n    plnType: plnType,\n    from: takeoff.name,\n    fromLat: takeoff.lat,\n    fromLong: takeoff.long,\n    to: landing.name,\n    toLat: landing.lat,\n    toLong: landing.long,\n    timeFlight,\n    timeBlock,\n    timeNight,\n    timeBiologicalNight,\n    timeWork,\n    type: type ? \"Плановый\" : \"Фактический\",\n  };\n};\n\nconst CollapsibleTable = ({flights}) => {\n  const classes = useStyles();\n  const generateRows = (flights) => flights.map((flight) => createData(flight));\n  const rows = generateRows(flights);\n\n  return (\n    <>\n      <Typography\n        className={classes.title}\n        variant=\"h6\"\n        color={\"textSecondary\"}\n        id=\"tableTitle\"\n        component=\"h3\"\n      >\n        Полёты\n      </Typography>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell />\n              <TableCell className={classes.th}>№ рейса</TableCell>\n              <TableCell className={classes.th} align=\"right\">\n                Дата рейса\n            </TableCell>\n              <TableCell className={classes.th} align=\"right\">\n                Откуда\n            </TableCell>\n              <TableCell className={classes.th} align=\"right\">\n                Куда\n            </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row, i) => (\n              <Row key={`${row.name}-${i}`} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nCollapsibleTable.propTypes = {\n  flights: PropTypes.array.isRequired,\n};\n\nexport default CollapsibleTable;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {useMediaQuery} from \"@material-ui/core\";\nimport {useHistory} from \"react-router\";\nimport {AppRoute} from \"../../const\";\nimport Btn from \"../btn/btn\";\nimport {connect} from \"react-redux\";\nimport {ActionCreator} from \"../../store/action\";\n\nconst BtnBack = ({resetStats}) => {\n  const history = useHistory();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n\n  const handleClick = (evt) => {\n    evt.preventDefault();\n    resetStats()\n    history.push(AppRoute.MAIN);\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <Btn color=\"initial\" clickHandler={handleClick} style={matches ? null : {width: \"100%\"}}>\n      Назад\n    </Btn>\n  );\n};\n\nBtnBack.propTypes = {\n  resetStats: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetStats() {\n    dispatch(ActionCreator.resetStatsInterval());\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(BtnBack);\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Container, Box, useMediaQuery, Grid} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {connect} from \"react-redux\";\nimport {NameSpace} from \"../../store/reducers/root\";\nimport DetailsTable from \"../details-table/details-table\";\nimport CollapsibleTable from \"../collapsible-table/collapsible-table\";\nimport BtnBack from \"../btn-back/btn-back\";\nimport {months, StatisticType} from \"../../const\";\nimport {ActionCreator} from \"../../store/action\";\nimport {generateChartData, getGroupedData} from \"../../helpers/statistic\";\nimport PageHeader from \"../page-header/page-header\";\n\nconst createData = (name, data) => {\n  return {name, data};\n};\n\nconst useStyles = makeStyles({\n  header: {\n    backgroundColor: \"#4e85f5\",\n    padding: \"28px 0 8px 20px\",\n  },\n  main: {\n    padding: \"0 20px 13px 20px\",\n  },\n  title: {\n    fontWeight: 700,\n    margin: 0,\n  },\n  grid: {\n    flexDirection: \"column\",\n    wrap: \"wrap\",\n  },\n  gridItem: {\n    marginBottom: \"15px\",\n  },\n});\n\nconst DetailsPage = ({isFlightsLoaded, statsByInterval, flights, updateStatsInterval, match: {params: {id}}}) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n  const {\n    actualTimeFlight,\n    actualTimeBlock,\n    actualTimeNight,\n    actualTimeBiologicalNight,\n    actualTimeWork,\n    plannedTimeFlight,\n    plannedTimeBlock,\n    plannedTimeNight,\n    plannedTimeBiologicalNight,\n    plannedTimeWork,\n    interval,\n  } = statsByInterval;\n\n  const [flightsForInterval, setFlightsForInterval] = useState({});\n  const [statisticType, setStatisticType] = useState(\"\");\n\n  useEffect(() => {\n    const statisticType = id.length === 4 ? StatisticType.YEARS : StatisticType.MONTHS;\n    setStatisticType(statisticType);\n  }, [id]);\n\n  const actualDataRows = [\n    createData(\"Общее время налёта\", actualTimeFlight),\n    createData(\"Общее полётное время\", actualTimeBlock),\n    createData(\"Общее ночное время\", actualTimeNight),\n    createData(\"Общее время биологической ночи\", actualTimeBiologicalNight),\n    createData(\"Общее рабочее время\", actualTimeWork),\n  ];\n\n  const plannedDataRows = [\n    createData(\"Общее время налёта\", plannedTimeFlight),\n    createData(\"Общее полётное время\", plannedTimeBlock),\n    createData(\"Общее ночное время\", plannedTimeNight),\n    createData(\"Общее время биологической ночи\", plannedTimeBiologicalNight),\n    createData(\"Общее рабочее время\", plannedTimeWork),\n  ];\n\n  useEffect(() => {\n    if (!Object.keys(flightsForInterval).length && statisticType && isFlightsLoaded) {\n      const interval = statisticType === StatisticType.YEARS ? id : id.slice(-4);\n      const groupedData = getGroupedData(flights, statisticType, interval);\n      setFlightsForInterval(groupedData);\n    }\n  }, [isFlightsLoaded, flightsForInterval, flights, statisticType, id]);\n\n  useEffect(() => {\n    if (!!Object.keys(flightsForInterval).length) {\n      const interval = statisticType === StatisticType.YEARS ? id : id.slice(0, 3);\n      const index = statisticType === StatisticType.MONTHS ? months.findIndex((month) => month === interval) : 0;\n      const statsByInterval = generateChartData(flightsForInterval[interval], statisticType, id.slice(-4))[index];\n      updateStatsInterval(statsByInterval);\n    }\n  }, [flightsForInterval, updateStatsInterval, statisticType, id]);\n\n  return (\n    <>\n      <PageHeader>{`Статистика за ${interval}`}</PageHeader>\n      <Box\n        className={classes.main}\n        style={matches ? {padding: \"0 17%\"} : null}\n      >\n        <Container maxWidth={matches ? \"xl\" : \"xs\"} style={{padding: \"15px 0\", width: \"100%\"}}>\n          <BtnBack />\n        </Container>\n        <Grid container justify=\"center\" style={{width: \"100%\"}}>\n          <Grid item style={{marginBottom: \"15px\", width: \"inherit\"}}>\n            <Container maxWidth={matches ? \"xl\" : \"xs\"} style={{padding: \"0\", width: \"100%\"}}>\n              <Grid container direction={matches ? \"row\" : \"column\"} justify=\"space-between\" wrap=\"wrap\" style={{padding: \"0\", width: \"100%\"}}>\n                <Grid className={classes.gridItem} container item direction=\"column\" style={matches ? {padding: \"0\", width: \"45%\"} : null}>\n                  <DetailsTable title={\"Фактическое время\"} rows={actualDataRows} style={{minWidth: \"100%\"}} />\n                </Grid>\n                <Grid container item direction=\"column\" style={matches ? {padding: \"0\", width: \"45%\"} : null}>\n                  <DetailsTable title={\"Плановое время\"} rows={plannedDataRows} style={{minWidth: \"100%\"}} />\n                </Grid>\n              </Grid>\n            </Container>\n          </Grid>\n          <Container maxWidth={matches ? \"xl\" : \"xs\"} style={{padding: \"0\", width: \"100%\"}}>\n            {\n              !!Object.keys(flightsForInterval).length && statsByInterval.name && <CollapsibleTable flights={flightsForInterval[statsByInterval.name]} />\n            }\n\n          </Container>\n        </Grid>\n\n      </Box>\n    </>\n  );\n};\n\nDetailsPage.propTypes = {\n  statsByInterval: PropTypes.object.isRequired,\n  flights: PropTypes.array.isRequired,\n  updateStatsInterval: PropTypes.func.isRequired,\n  isFlightsLoaded: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  statsByInterval: state[NameSpace.STATISTIC].statsByInterval,\n  flights: state[NameSpace.FLIGHTS].flights,\n  isFlightsLoaded: state[NameSpace.FLIGHTS].isFlightsLoaded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateStatsInterval(stats) {\n    dispatch(ActionCreator.setStatsInterval(stats));\n  },\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailsPage);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { AppRoute } from \"../../const\";\nimport MainPage from \"../main-page/main-page\";\nimport DetailsPage from \"../details-page/details-page\";\nimport { createMuiTheme, ThemeProvider, CssBaseline } from \"@material-ui/core\";\n\nconst App = () => {\n  const theme = createMuiTheme({\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          body: {\n            backgroundColor: \"#ffffff\",\n          },\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: \"#e5e5e5\",\n      },\n      secondary: {\n        main: \"#4e85f5\",\n      },\n      text: {\n        primary: \"#ffffff\",\n        secondary: \"#4e85f5\",\n      },\n    },\n    background: {\n      default: \"#e5e5e5\",\n    },\n    typography: {\n      body1: {\n        fontWeight: 400,\n        color: \"#000000\",\n      },\n      body2: {\n        fontWeight: 700,\n        color: \"#676565\",\n      },\n      h5: {\n        fontWeight: 700,\n      },\n    },\n    spacing: 2,\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path={AppRoute.MAIN}\n            render={(props) => <MainPage history={props.history} />}\n          ></Route>\n          <Route exact path={`${AppRoute.DETAILS}/:id`} render={(props) => <DetailsPage match={props.match} />} />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const Method = {\n  GET: `GET`,\n};\n\nconst SuccessHTTPStatusRange = {\n  MIN: 200,\n  MAX: 299\n};\n\nclass Api {\n  constructor(endPoint) {\n    this._endPoint = endPoint;\n  }\n\n  getFlights(url) {\n    return this._load({url: url})\n      .then(Api.toJSON)\n      .catch((err) => {\n        throw console.log(err);\n      });\n  }\n\n  _load({\n    url,\n    method = Method.GET,\n    body = null,\n    headers = new Headers({\"Accept\": \"application/json\"}),\n    mode = \"cors\"\n  }) {\n    return fetch(`${this._endPoint}${url}`, {\n      method,\n      body,\n      headers,\n      mode\n    })\n      .then(Api.checkStatus)\n      .catch((err) => {\n        throw console.log(err);\n      });\n  }\n\n  static checkStatus(response) {\n    if (\n      response.status < SuccessHTTPStatusRange.MIN &&\n      response.status > SuccessHTTPStatusRange.MAX\n    ) {\n      throw new Error(`${response.status}: ${response.statusText}`);\n    }\n\n    return response;\n  }\n\n  static toJSON(response) {\n    return response.json();\n  }\n\n  static catchError(err) {\n    throw err;\n  }\n}\n\nexport default Api;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport App from \"./components/app/app\";\nimport root from \"./store/reducers/root\";\nimport Api from \"./api/api\";\nimport { fetchFlights } from \"./store/api-actions\";\n\nconst BACKEND_URL = `http://192.168.1.68:8080`;\n\nconst api = new Api(BACKEND_URL);\nconst store = createStore(\n  root,\n  composeWithDevTools(applyMiddleware(thunk.withExtraArgument(api)))\n);\n\nPromise.all([store.dispatch(fetchFlights())])\n  .then(() => {\n    render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n      document.getElementById(\"root\")\n    );\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n","import { APIRoute } from \"../const\";\nimport { ActionCreator } from \"./action\";\n\nexport const fetchFlights = () => (dispatch, _getState, api) =>\n  api\n    .getFlights(APIRoute.FETCH_FLIGHTS)\n    .then((flights) => dispatch(ActionCreator.loadFlights(flights)));\n"],"sourceRoot":""}