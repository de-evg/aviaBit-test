{"version":3,"sources":["store/action.js","mock/flights.js","const.js","store/selectors.js","store/reducers/flights/flights.js","store/reducers/statistic/statistic.js","store/reducers/root.js","components/user/user.jsx","components/next-flight/next-flight.jsx","components/accordion-container/accordion-container.jsx","components/toggle/toggle.jsx","components/select/select.js","components/chart/chart.jsx","components/flight-statistic/flight-statistic.jsx","components/main-page/main-page.jsx","components/details-page/details-page.jsx","components/app/app.jsx","index.jsx"],"names":["ActionType","ActionCreator","flights","type","payload","filter","FlightDate","FlightNumber","PlaneType","PlaneNumber","TimeFlight","Time","generateRandomNumber","start","end","Math","floor","random","generateTimes","work","block","flight","night","biologicalNight","generateFlight","time","Date","length","generateFlights","index","push","AppRoute","StatisticType","months","Interval","MONTH","date","getMonth","YEAR","getFullYear","sortByDate","flightA","flightB","dateFlight","groupByYears","statisticType","reduce","result","year","groupByMonths","flightsByYears","Month","month","MonthMap","filterByPlanned","getGroupedData","years","Object","keys","statisticByYears","yearStatistic","timeFlight","timeWork","name","statisticByMonths","monthStatistic","convertToChartData","convertSecToHours","sec","getChartData","createSelector","state","NameSpace","FLIGHTS","STATISTIC","filteredActualFlights","filterByActual","filteredPlannedFlights","actualChartData","plannedChartData","Set","forEach","add","statisctic","actualFlight","data","plannedFlight","actualTimeFlight","actualTimeWork","plannedTimeFlight","plannedTimeWork","getAllData","getYears","getNextFlight","currentDate","sort","slice","findNextFlight","initialState","isFlightsLoaded","nextFlight","combineReducers","action","useStyles","makeStyles","root","marginBottom","userName","color","fontWeight","userMail","User","classes","Grid","container","spacing","wrap","alignContent","item","className","Avatar","alt","style","width","height","src","alignItems","Typography","variant","grid","borderBottom","paddingBottom","card","boxShadow","plane","row","th","border","paddingLeft","paddingTop","td","paddingRight","createData","connect","flightNumber","plnType","pln","toLocaleTimeString","getDate","rows","Card","CardMedia","component","image","title","CardContent","padding","Table","TableBody","map","TableRow","justify","TableCell","align","boxSizing","maxWidth","accordionItem","label","expandIcon","position","AccordionContainer","children","renderDetails","Accordion","AccordionSummary","aria-controls","id","AccordionDetails","labelFont","fontSize","borderRadius","gridItem","flexBasis","flexGrow","BlueSwitch","withStyles","switchBase","margin","checked","track","backgroundColor","Switch","Toggle","changeHandler","labels","leftLabel","rightLabel","useState","checkedA","setState","Container","textAlign","onChange","evt","target","inputProps","theme","justifyContent","formControl","minWidth","background","select","selectEmpty","marginTop","dispatch","setFilter","FormControl","Select","labelId","value","defaultValue","MenuItem","times","intervals","chartData","toggleStatisticType","isTimeToggled","setTimeToggle","isStatisticTypeToggled","setStatisticToggle","bootomGap","handleChangeToggle","useCallback","handleStatisticToggle","useEffect","minHeight","left","bottom","ResponsiveContainer","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Legend","verticalAlign","Bar","barSize","stackId","fill","FlightStatistic","header","main","MainPage","history","matches","useMediaQuery","Box","gutterBottom","DetailsPage","my","getFlights","createMuiTheme","overrides","MuiCssBaseline","body","palette","primary","secondary","text","third","default","typography","body1","body2","h5","ThemeProvider","CssBaseline","exact","path","render","props","store","createStore","composeWithDevTools","document","getElementById"],"mappings":"0KAAaA,EACG,eADHA,EAEY,wBAFZA,EAGI,gBAGJC,EACE,SAACC,GAAD,MAAc,CACzBC,KAAM,eACNC,QAASF,IAHAD,EAKU,SAACE,GAAD,MAAW,CAC9BA,KAAM,wBACNC,QAASD,IAPAF,EASG,SAACI,GAAD,MAAa,CACzBF,KAAM,gBACNC,QAASC,I,gBCfPC,EACG,KADHA,EAEC,KAGDC,EACG,IADHA,EAEC,IAGDC,EAAY,CAChB,YACA,YACA,YACA,YACA,QACA,SAGIC,EACG,IADHA,EAEC,IAGDC,EACG,MADHA,EAEC,KAGDC,EACO,KADPA,EAEQ,KAFRA,EAGY,KAOZC,EAAuB,SAACC,EAAOC,GACnC,OAAOC,KAAKC,MAAMH,EAAQE,KAAKE,UAAYH,EAAMD,KAK7CK,EAAgB,WACpB,IAAMC,EAAOP,EAAqBF,EAAkBA,GAC9CU,EAAQD,EAAOR,EAAiBA,EAChCU,EAASD,EAAQT,EAEnBW,EAAQ,EACRC,EAAkB,EAMtB,OAd0BR,KAAKE,SAAW,KAWxCM,EADAD,EAAQD,EAAST,EAAqB,EAAGS,IAIpC,CAACF,OAAMC,QAAOC,SAAQC,QAAOC,oBAGhCC,EAAiB,WACrB,IA1B0BX,EAAOC,EA0B3BW,EAAOP,IACb,MAAO,CACL,YA5BwBL,EA4BSP,EA5BFQ,EA4BoBR,EA3B9C,IAAIoB,KAAKb,EAAQE,KAAKE,UAAYH,EAAMD,GAAQD,EAAqB,EAAG,IAAMA,EAAqB,EAAG,MA4B3G,OAAUA,EAAqBL,EAAoBA,GACnD,QAAWC,EAAUI,EAAqB,EAAGJ,EAAUmB,SACvD,IAAM,GAAN,OAAUf,EAAqBH,EAAmBA,GAAlD,MACA,WAAcgB,EAAKJ,OACnB,UAAaI,EAAKL,MAClB,UAAaK,EAAKH,MAClB,oBAAuBG,EAAKF,gBAC5B,SAAYE,EAAKN,KACjB,KAAQJ,KAAKE,SAAW,GACxB,QAAW,CACT,KAAQ,mFACR,IAAO,YACP,KAAQ,MAEV,QAAW,CACT,KAAQ,4GACR,IAAO,YACP,KAAQ,gBAKDW,EAAkB,WAE7B,IADA,IAAM1B,EAAU,GACP2B,EAAQ,EAAGA,EA1FD,IA0FuBA,IACxC3B,EAAQ4B,KAAKN,KAEf,OAAOtB,G,kBC7FI6B,EACL,IADKA,EAEF,WAGEC,EACJ,QADIA,EAEH,SAGGC,EAAS,CACpB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OClBIC,EAAW,CACfC,MAAO,SAACC,GAAD,OAAUA,EAAKC,YACtBC,KAAM,SAACF,GAAD,OAAUA,EAAKG,gBAGjBC,EAAa,SAACC,EAASC,GAC3B,OAAID,EAAQE,WAAaD,EAAQC,WAAa,EACrC,EAGLF,EAAQE,WAAaD,EAAQC,WAAa,GACpC,EAGH,GAGHC,EAAe,SAAC1C,EAAS2C,GAC7B,OAAO3C,EAAQ4C,QAAO,SAACC,EAAQ1B,GAC7B,IAAM2B,EAAOd,EAASW,GAAexB,EAAOsB,YAG5C,OAFAI,EAAOC,GAAQD,EAAOC,IAAS,GAC/BD,EAAOC,GAAMlB,KAAKT,GACX0B,IACN,KAGCE,EAAgB,SAACC,EAAgBL,EAAeG,GACpD,IAAMG,EAAQlB,EAAOa,QAAO,SAACC,EAAQK,GAEnC,OADAL,EAAOK,GAAS,GACTL,IACN,IAEH,OAAOG,EAAeF,GAAMF,QAAO,SAACO,EAAUhC,GAI5C,OAFAgC,EADkBpB,EAAOC,EAASW,GAAexB,EAAOsB,cACpCb,KAAKT,GAElBgC,IACNF,IAOCG,EAAkB,SAACpD,GACvB,OAAOA,EAAQG,QAAO,SAACgB,GAAD,QAAcA,EAAOlB,SAwCvCoD,EAAiB,SAACrD,EAAS2C,EAAexC,GAC9C,IAAM6C,EAAiBN,EAAa1C,EAAS,QAM7C,OA5CyB,SAACA,EAAS2C,GACnC,IAAMW,EAAQC,OAAOC,KAAKxD,GAC1B,OAAQ2C,GACN,KAAKb,EACH,OAAOwB,EAAMV,QAAO,SAACa,EAAkBX,GACrC,IAAMY,EAAgB1D,EAAQ8C,GAAMF,QAClC,SAACrB,EAAMJ,GAGL,OAFAI,EAAKoC,YAAcxC,EAAOwC,YAAc,EACxCpC,EAAKqC,UAAYzC,EAAOyC,UAAY,EAC7BrC,IAET,CAAEoC,WAAY,EAAGC,SAAU,EAAGC,KAAMf,IAItC,OADAW,EAAiB7B,KAAK8B,GACfD,IACN,IAEL,KAAK3B,EACH,OAAOC,EAAOa,QAAO,SAACkB,EAAmBZ,GACvC,IAAMa,EAAiB/D,EAAQkD,GAAON,QACpC,SAACrB,EAAMJ,GAGL,OAFAI,EAAKoC,YAAcxC,EAAOwC,YAAc,EACxCpC,EAAKqC,UAAYzC,EAAOyC,UAAY,EAC7BrC,IAET,CAAEoC,WAAY,EAAGC,SAAU,EAAGC,KAAMX,IAGtC,OADAY,EAAkBlC,KAAKmC,GAChBD,IACN,IAEL,QACE,OAAO9D,GAUcgE,CAHvBrB,IAAkBb,EACdkB,EACAD,EAAcC,EAAgB,QAAS7C,GACOwC,IAIhDsB,EAAoB,SAACC,GAAD,OAASrD,KAAKC,MAAMoD,EAAM,OA2CvCC,EAAeC,aAC1B,SAACC,GAAD,OAAWA,EAAMC,GAAUC,SAASvE,WACpC,SAACqE,GAAD,OAAWA,EAAMC,GAAUE,WAAW7B,iBACtC,SAAC0B,GAAD,OAAWA,EAAMC,GAAUE,WAAWrE,UACtC,SAACH,EAAS2C,EAAexC,GACvB,IAAMsE,EAvGa,SAACzE,GACtB,OAAOA,EAAQG,QAAO,SAACgB,GAAD,OAAaA,EAAOlB,QAsGVyE,CAAe1E,GACvC2E,EAAyBvB,EAAgBpD,GAY/C,OA3De,SAAC4E,EAAiBC,GACnC,GACEtB,OAAOC,KAAKoB,GAAiBnD,QAC7B8B,OAAOC,KAAKqB,GAAkBpD,OAC9B,CACA,IAAM6B,EAAQ,IAAIwB,IAgClB,OA/BAF,EAAgBG,SAAQ,SAAC5D,GACvBmC,EAAM0B,IAAI7D,EAAO0C,SAEnBgB,EAAiBE,SAAQ,SAAC5D,GACxBmC,EAAM0B,IAAI7D,EAAO0C,SAGH,YAAIP,GAAOV,QAAO,SAACC,EAAQC,GACzC,IAAMmC,EAAa,GACbC,EAAeN,EAAgBzE,QAAO,SAACgF,GAAD,OAAUA,EAAKtB,OAASf,KAC9DsC,EAAgBP,EAAiB1E,QACrC,SAACgF,GAAD,OAAUA,EAAKtB,OAASf,KAkB1B,OAhBIoC,EAAazD,SACfwD,EAAWI,iBAAmBpB,EAC5BiB,EAAa,GAAGvB,YAElBsB,EAAWK,eAAiBrB,EAAkBiB,EAAa,GAAGtB,WAE5DwB,EAAc3D,SAChBwD,EAAWM,kBAAoBtB,EAC7BmB,EAAc,GAAGzB,YAEnBsB,EAAWO,gBAAkBvB,EAC3BmB,EAAc,GAAGxB,WAGrBqB,EAAWpB,KAAOf,EAClBD,EAAOjB,KAAKqD,GACLpC,IACN,KAsBa4C,CAVQpC,EACtBoB,EACA9B,EACAxC,GAEuBkD,EACvBsB,EACAhC,EACAxC,KAE+D,MAKxDuF,EAAWtB,aACtB,SAACC,GAAD,OAAWA,EAAMC,GAAUC,SAASvE,WACpC,SAACA,GACC,IAAMgD,EAAiBN,EAAa1C,EAAS,QAE7C,OADcuD,OAAOC,KAAKR,MAqBjB2C,EAAgB,SAAC3F,GAG5B,OAnBqB,SAACA,GACtB,IAAM4F,EAAc,IAAIpE,KADU,EAEZ,CACpBoE,EAAYvD,cACZN,EAAO6D,EAAYzD,aAFdW,EAF2B,KAErBI,EAFqB,KAM5BF,EAAiBN,EAAa1C,EAAS,QAO7C,OANwB+C,EAAcC,EAAgB,QAASF,GAClCI,GAC1B/C,QAAO,SAACgB,GAAD,OAAYA,EAAOsB,WAAamD,KACvCC,KAAKvD,GACLwD,OAAO,GAAG,GAOMC,CADY3C,EAAgBpD,KC1L3CgG,EAAe,CACnBhG,QAAS,GACTiG,iBAAiB,EACjBC,WAAY,ICJRF,EAAe,CACnBrD,cAAeb,EACf3B,QAAQ,IAAIqB,MAAOa,eCDRiC,GAAY,CACvBC,QAAQ,UACRC,UAAU,aAGG2B,8BAAe,mBAC3B7B,GAAUC,SFAc,WAAmC,IAAlCF,EAAiC,uDAAzB2B,EAAcI,EAAW,uCAC3D,OAAQA,EAAOnG,MACb,KAAKH,EACH,IAAME,EAAU0B,IACVwE,EAAaP,EAAc3F,GACjC,OAAO,2BAAKqE,GAAZ,IAAmBrE,UAASiG,iBAAiB,EAAMC,WAAYA,IAEjE,QACE,OAAO7B,METiB,cAE3BC,GAAUE,WDHgB,WAAmC,IAAlCH,EAAiC,uDAAzB2B,EAAcI,EAAW,uCAC7D,OAAQA,EAAOnG,MACb,KAAKH,EACH,OAAO,2BAAKuE,GAAZ,IAAmB1B,cAAeyD,EAAOlG,UAC3C,KAAKJ,EACD,OAAO,2BAAKuE,GAAZ,IAAmBlE,OAAQiG,EAAOlG,UAEtC,QACE,OAAOmE,MCPiB,I,8ECJxBgC,GAAYC,aAAW,CAC3BC,KAAM,CACJC,aAAc,QAEhBC,SAAU,CACRC,MAAO,UACPC,WAAY,KAEdC,SAAU,CACRF,MAAO,UACPC,WAAY,OAqCDE,GAjCF,WACX,IAAMC,EAAUT,KAEhB,OACE,gBAACU,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTC,KAAK,SACLC,aAAa,gBACbC,MAAI,EACJC,UAAWP,EAAQP,KANrB,UAQE,eAACQ,GAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACE,GAAA,EAAD,CACEC,IAAI,iBACJC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,IAAI,uBAGR,eAACZ,GAAA,EAAD,CAAMC,WAAS,EAACY,WAAW,SAASR,MAAI,EAAxC,SACE,gBAACL,GAAA,EAAD,CAAMK,MAAI,EAAV,UACE,eAACS,GAAA,EAAD,CAAYR,UAAWP,EAAQL,SAAUqB,QAAQ,QAAjD,iFAGA,eAACD,GAAA,EAAD,CAAYR,UAAWP,EAAQF,SAAUkB,QAAQ,QAAjD,+C,sEC3BJzB,GAAYC,aAAW,CAC3ByB,KAAM,CACJN,MAAO,OACPO,aAAc,oCACdC,cAAe,QAEjBC,KAAM,CACJC,UAAW,QAEbC,MAAO,CACL5B,aAAc,QAEhB6B,IAAK,CACH7B,aAAc,QAEhB8B,GAAI,CACFC,OAAQ,OACRC,YAAa,EACbC,WAAY,OACZR,cAAe,OACfvB,MAAO,UACPC,WAAY,KAEd+B,GAAI,CACFH,OAAQ,OACRI,aAAc,EACdF,WAAY,OACZR,cAAe,OACfvB,MAAO,UACPC,WAAY,OAIViC,GAAa,SAAC/E,EAAMsB,GACxB,MAAO,CAAEtB,OAAMsB,SAwEF0D,gBAJS,SAACxE,GAAD,MAAY,CAClC6B,WAAY7B,EAAMC,GAAUC,SAAS2B,cAGxB2C,EArEI,SAAC,GAAoB,IAAlB3C,EAAiB,EAAjBA,WACdY,EAAUT,KAEZnE,EAAO,GACP4G,EAAe,GACfC,EAAU,GACVC,EAAM,GACNzF,OAAOC,KAAK0C,GAAYzE,SAC1BS,EAAI,UAAMgE,EAAWzD,WAAWwG,qBAAqBnD,MAAM,EAAG,GAA1D,YAAgEI,EAAWzD,WAAWyG,UAAtF,YAAmGnH,EAAOmE,EAAWzD,WAAWN,YAAhI,YAA+I+D,EAAWzD,WAAWJ,eACzKyG,EAAe5C,EAAW/E,OAC1B4H,EAAU7C,EAAW6C,QACrBC,EAAM9C,EAAW8C,KAGnB,IAAMG,EAAO,CACXP,GAAW,0DAAc1G,GACzB0G,GAAW,gEAAeE,GAC1BF,GAAW,iHAAwBG,GACnCH,GAAW,iHAAwBI,IAGrC,OACE,gBAACjC,GAAA,EAAD,CAAMK,MAAI,EAACC,UAAWP,EAAQiB,KAA9B,UACE,eAACqB,GAAA,EAAD,CAAM/B,UAAWP,EAAQoB,KAAzB,SACE,eAACmB,GAAA,EAAD,CACEC,UAAU,MACV/B,IAAI,aACJE,MAAM,MACNC,OAAO,KACP6B,MAAM,kBACNC,MAAM,aACNnC,UAAWP,EAAQsB,UAGvB,eAACqB,GAAA,EAAD,CAAajC,MAAO,CAAEkC,QAAS,GAA/B,SACE,eAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,UACGT,EAAKU,KAAI,SAACxB,GAAD,OACR,eAACyB,GAAA,EAAD,CAAyBzC,UAAWP,EAAQuB,IAA5C,SACE,gBAACtB,GAAA,EAAD,CAAMC,WAAS,EAAC+C,QAAQ,gBAAxB,UACE,eAACC,GAAA,EAAD,CACEV,UAAU,KACVxB,QAAQ,OACRT,UAAWP,EAAQwB,GAHrB,SAKGD,EAAIxE,OAGP,eAACmG,GAAA,EAAD,CACElC,QAAQ,OACRT,UAAWP,EAAQ4B,GACnBuB,MAAM,QAHR,SAKG5B,EAAIlD,WAfIkD,EAAIxE,qB,mDChF3BwC,GAAYC,aAAW,CAC3BC,KAAM,CACJ2D,UAAW,cACX/B,UAAW,OACXgC,SAAU,QAEZC,cAAe,CACbV,QAAS,KAEXW,MAAO,CACL1D,WAAY,KAEdC,SAAU,CACRF,MAAO,UACPC,WAAY,KAEd2D,WAAY,CACVC,SAAU,WACV7D,MAAO,aAwBI8D,GApBY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAChC5D,EAAUT,KAEhB,OACE,eAACU,GAAA,EAAD,CAAMK,MAAI,EAAV,SACE,gBAACuD,GAAA,EAAD,CAAWtD,UAAWP,EAAQP,KAA9B,UACE,eAACqE,GAAA,EAAD,CACEN,WAAY,eAAC,KAAD,CAAgBjD,UAAWP,EAAQwD,aAC/CO,gBAAc,kBACdC,GAAG,iBACHzD,UAAWP,EAAQsD,cAJrB,SAME,eAACvC,GAAA,EAAD,CAAYR,UAAWP,EAAQuD,MAA/B,SAAuCI,MAEzC,eAACM,GAAA,EAAD,CAAkB1D,UAAWP,EAAQsD,cAArC,SAAqDM,Y,iGC3CvDrE,GAAYC,aAAW,CAC3B0E,UAAW,CACTtB,QAAS,MACTuB,SAAU,OACVtE,WAAY,IACZuE,aAAc,OAEhBC,SAAU,CACRC,UAAW,MACX3D,MAAO,MACP4D,SAAU,OAIRC,GAAaC,aAAW,CAC5BC,WAAY,CACV9E,MAAO,UACP+E,OAAQ,UAEVC,QAAS,GACTC,MAAO,CAAEC,gBAAiB,YANTL,CAOhBM,MAkDYC,GAhDA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,OACzBlF,EAAUT,KAD4B,eAEZ2F,EAFY,GAErCC,EAFqC,KAE1BC,EAF0B,OAIlBC,mBAAS,CACjCC,UAAU,IALgC,oBAIrC/H,EAJqC,KAI9BgI,EAJ8B,KAa5C,OACE,eAACC,GAAA,EAAD,CAAW9E,MAAO,CAACkC,QAAS,KAA5B,SACE,gBAAC3C,GAAA,EAAD,CAAMuC,UAAU,QAAQtC,WAAS,EAAC+C,QAAQ,gBAAgBnC,WAAW,SAArE,UACE,eAACb,GAAA,EAAD,CAAMK,MAAI,EAACC,UAAWP,EAAQqE,SAAU3D,MAAO,CAAC+E,UAAW,SAA3D,SACE,eAAC1E,GAAA,EAAD,CACER,UAAWP,EAAQkE,UACnBxD,MAAQnD,EAAM+H,SAA6D,GAAlD,CAAE7D,OAAQ,oBAAqBmB,QAAS,OACjEJ,UAAU,IAHZ,SAKG2C,MAGL,eAAClF,GAAA,EAAD,CAAMK,MAAI,EAAV,SACE,eAACkE,GAAD,CACEI,QAASrH,EAAM+H,SACfI,SApBW,SAACC,GACpBJ,EAAS,2BAAKhI,GAAN,kBAAcoI,EAAIC,OAAO7I,KAAO4I,EAAIC,OAAOhB,WACnDK,KAmBQlI,KAAK,WACL8I,WAAY,CAAE,aAAc,yBAC5BtF,UAAWP,EAAQ0E,eAGvB,eAACzE,GAAA,EAAD,CAAMK,MAAI,EAACC,UAAWP,EAAQqE,SAA9B,SACE,eAACtD,GAAA,EAAD,CACER,UAAWP,EAAQkE,UACnBxD,MAAOnD,EAAM+H,SAAW,CAAE7D,OAAQ,oBAAqBmB,QAAS,OAAW,GAC3EJ,UAAU,IAHZ,SAKG4C,Y,8BCpDP7F,GAAYC,cAAW,SAACsG,GAAD,MAAY,CACvC7E,KAAM,CACJ8E,eAAe,iBAEjBC,YAAa,CACXrB,OAAQmB,EAAM3F,QAAQ,GACtB8F,SAAU,IACVC,WAAW,WAEbC,OAAQ,CACNvG,MAAM,QACNgB,OAAO,QAETwF,YAAa,CACXC,UAAWP,EAAM3F,QAAQ,QA8Cd4B,gBAXS,SAACxE,GAAD,MAAY,CAClCvB,KAAMuB,EAAMC,GAAUE,WAAWrE,OACjCmD,MAAOoC,EAASrB,OAGS,SAAC+I,GAAD,MAAe,CACxCC,UADwC,SAC9BlN,GACRiN,EAASrN,EAA2BI,QAIzB0I,EA1CM,SAAC,GAAkC,IAAhC1I,EAA+B,EAA/BA,OAAQkN,EAAuB,EAAvBA,UAAW/J,EAAY,EAAZA,MACnCwD,EAAUT,KAMhB,OACE,eAACiG,GAAA,EAAD,CAAW9E,MAAO,CAACkC,QAAS,KAA5B,SACE,gBAAC3C,GAAA,EAAD,CAAMC,WAAS,EAACK,UAAWP,EAAQiB,KAAnC,UACE,eAACF,GAAA,EAAD,CAAYyB,UAAU,IAAtB,iFACA,eAACgE,GAAA,EAAD,CAAaxF,QAAQ,WAAWT,UAAWP,EAAQgG,YAAnD,SACE,eAACS,GAAA,EAAD,CACElG,UAAWP,EAAQmG,OACnBO,QAAQ,eACR1C,GAAG,kBACH2C,MAAOtN,EACPuN,aAAcvN,EACdqM,SAfW,SAACC,GACpBY,EAAUZ,EAAIC,OAAOe,QAebpD,MAAM,OAPR,SASG/G,EAAMuG,KAAI,SAAC/G,GAAD,OACT,eAAC6K,GAAA,EAAD,CAAUF,MAAO3K,EAAjB,SAAwBA,mBCnChC8K,GAAQ,CAAC,sEAAgB,uEACzBC,GAAY,CAAC,2BAAQ,wCA2FZhF,gBAVS,SAACxE,GAAD,MAAY,CAClCyJ,UAAW3J,EAAaE,OAGC,SAAC+I,GAAD,MAAe,CACxCW,oBADwC,SACpB9N,GAClBmN,EAASrN,EAAkCE,QAIhC4I,EAzFD,SAAC,GAAsC,IAArCiF,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,oBAAyB,EACX5B,oBAAS,GADE,oBAC3C6B,EAD2C,KAC5BC,EAD4B,OAEG9B,oBAAS,GAFZ,oBAE3C+B,EAF2C,KAEnBC,EAFmB,KAG5CC,EAAYF,EAAyB,CAAC1H,aAAc,KAAO,CAACA,aAAc,QAE1E6H,EAAqBC,uBAAY,WACrCL,GAAeD,KACd,CAACA,IAEEO,EAAwBD,uBAAY,WACxCH,GAAoBD,KACnB,CAACA,IAQJ,OANAM,qBAAU,WACRT,EACEG,EAAyBpM,EAAuBA,KAEjD,CAACoM,EAAwBH,IAG1B,gBAAChH,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAAC,GAAD,CAAQ+E,cAAewC,EAAuBvC,OAAQ6B,KACtD,eAAC,GAAD,CAAQrG,MAAO4G,EAAWrC,cAAesC,EAAoBrC,OAAQ4B,KACrE,eAAC7G,GAAA,EAAD,CAAMK,MAAI,EAACI,MAAO,CAACkC,QAAS,SAAU+E,UAAW,OAAQ1B,SAAU,QAAnE,SACGmB,GAA0B,eAAC,GAAD,MAG7B,sBAAK1G,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAASgH,KAAM,QAASC,OAAQ,SAApE,SACE,eAACC,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CAAUpH,MAAM,OAAOC,OAAO,OAAOvC,KAAM2I,EAA3C,UACE,eAACgB,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,eAACC,GAAA,EAAD,CAAOC,QAAQ,SACf,eAACC,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,CAAQC,cAAc,SAAS1H,OAAQ,KACtCsG,GACC,eAACqB,GAAA,EAAD,CACEC,QAAS,GACTL,QAAQ,mBACRpL,KAAK,yIACL0L,QAAQ,IACRC,KAAK,sBAGRxB,GACC,eAACqB,GAAA,EAAD,CACEC,QAAS,GACTL,QAAQ,oBACRpL,KAAK,uHACL0L,QAAQ,IACRC,KAAK,6BAGPxB,GACA,eAACqB,GAAA,EAAD,CACEC,QAAS,GACTL,QAAQ,iBACRpL,KAAK,yIACL0L,QAAQ,IACRC,KAAK,uBAGPxB,GACA,eAACqB,GAAA,EAAD,CACEC,QAAS,GACTL,QAAQ,kBACRpL,KAAK,uHACL0L,QAAQ,IACRC,KAAK,yCClFfnJ,GAAYC,aAAW,CAC3B+D,MAAO,CACL3D,MAAO,UACPC,WAAY,IACZsE,SAAU,QAEZrE,SAAU,CACRF,MAAO,UACPC,WAAY,KAEd2D,WAAY,CACVC,SAAU,WACV7D,MAAO,aAiBI+I,GAbS,WACtB,IAAM3I,EAAUT,KAEhB,OACE,gBAACU,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACa,GAAA,EAAD,CAAYR,UAAWP,EAAQuD,MAA/B,iPAGA,eAAC,GAAD,QChBAhE,GAAYC,aAAW,CAC3BoJ,OAAQ,CACN1C,WAAY,UACZtD,QAAS,mBAEXiG,KAAM,CACJjG,QAAS,yBAiCEkG,GA7BE,SAAC,GAAgB,EAAdC,QAAe,IAC3B/I,EAAUT,KACVyJ,EAAUC,aAAc,sBAE9B,OACE,uCACE,eAACC,GAAA,EAAD,CAAK3I,UAAWP,EAAQ4I,OAAxB,SACE,eAACpD,GAAA,EAAD,CAAWnC,SAAS,KAApB,SACI,eAACtC,GAAA,EAAD,CACEnB,MAAM,cACNoB,QAASgI,EAAU,KAAO,KAC1BxG,UAAU,KACV2G,cAAY,EAJd,4DAUN,eAACD,GAAA,EAAD,CAAK3I,UAAWP,EAAQ6I,KAAxB,SACE,gBAAC5I,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,CAAoBQ,MAAO,CAACC,MAAO,SAAUiD,cAAe,kBAAM,eAAC,GAAD,KAAlE,wHC1BKwF,GAjBK,WAClB,IAAMJ,EAAUC,aAAc,sBAE9B,OACE,eAACzD,GAAA,EAAD,CAAWnC,SAAS,KAApB,SACE,gBAAC6F,GAAA,EAAD,CAAKG,GAAI,EAAG5D,UAAU,SAAtB,UACE,eAAC1E,GAAA,EAAD,CAAYC,QAASgI,EAAU,KAAO,KAAMxG,UAAU,KAAK2G,cAAY,EAAvE,kDAGA,eAACD,GAAA,EAAD,CAAKvB,UAAU,QAAf,SACE,eAAC,GAAD,CAAO0B,GAAI,Y,8BC8ENtH,gBAVS,SAACxE,GAAD,MAAY,CAClC4B,gBAAiB5B,EAAMC,GAAUC,SAAS0B,oBAGjB,SAACmH,GAAD,MAAe,CACxCgD,WADwC,WAEtChD,EAASrN,SAIE8I,EAlFH,SAAC,GAAqC,IAAnC5C,EAAkC,EAAlCA,gBAAiBmK,EAAiB,EAAjBA,WACxBxD,EAAQyD,aAAe,CAC3BC,UAAW,CACTC,eAAgB,CACd,UAAW,CACTC,KAAM,CACJ5E,gBAAiB,cAMzB6E,QAAS,CACPC,QAAS,CACPf,KAAM,WAERgB,UAAW,CACThB,KAAM,WAERiB,KAAM,CACJF,QAAS,UACTC,UAAW,UACXE,MAAO,YAGX7D,WAAY,CACV8D,QAAS,WAEXC,WAAY,CACVC,MAAO,CACLrK,WAAY,IACZD,MAAO,WAETuK,MAAO,CACLtK,WAAY,IACZD,MAAO,WAETwK,GAAI,CACFvK,WAAY,MAGhBM,QAAS,IASX,OANAuH,qBAAU,WACHvI,GACHmK,MAED,CAACnK,EAAiBmK,IAGnB,gBAACe,GAAA,EAAD,CAAevE,MAAOA,EAAtB,UACE,eAACwE,GAAA,EAAD,IACA,eAAC,IAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CACEC,OAAK,EACLC,KAAMzP,EACN0P,OAAQ,SAACC,GAAD,OAAW,eAAC,GAAD,CAAU3B,QAAS2B,EAAM3B,aAE9C,eAAC,IAAD,CAAOwB,OAAK,EAACC,KAAMzP,EAAkB0P,OAAQ,kBAAM,eAAC,GAAD,kBC/DvDE,GAAQC,sBAAYnL,GAAMoL,iCAEhCJ,iBACE,eAAC,IAAD,CAAUE,MAAOA,GAAjB,SAEE,eAAC,GAAD,MAEFG,SAASC,eAAe,W","file":"static/js/main.9c4d241f.chunk.js","sourcesContent":["export const ActionType = {\n  LOAD_FLIGHTS: \"LOAD_FLIGHTS\",\n  CHANGE_STATISTIC_TYPE: \"CHANGE_STATISTIC_TYPE\",\n  CHANGE_FILTER: \"CHANGE_FILTER\"\n};\n\nexport const ActionCreator = {\n  loadFlights: (flights) => ({\n    type: \"LOAD_FLIGHTS\",\n    payload: flights\n  }),\n  changeStatisticType: (type) => ({\n    type: \"CHANGE_STATISTIC_TYPE\",\n    payload: type\n  }),\n  changeFilter: (filter) => ({\n    type: \"CHANGE_FILTER\",\n    payload: filter\n  }),\n};\n","const FLIGHT_COUNT = 500;\n\nconst FlightDate = {\n  START: 2010,\n  END: 2022\n};\n\nconst FlightNumber = {\n  START: 1000,\n  END: 5000\n};\n\nconst PlaneType = [\n  'B-757-200',\n  'B-757-300',\n  'B-767-200',\n  'B-767-300',\n  'A-380',\n  'A-350'\n];\n\nconst PlaneNumber = {\n  START: 100,\n  END: 999\n};\n\nconst TimeFlight = {\n  START: 14400,\n  END: 36000\n};\n\nconst Time = {\n  PREFLIGHT: 3600,\n  POSTFLIGHT: 3600,\n  MOVE_ON_GROUND: 1800\n};\n\nconst generateRandomDate = (start, end) => {\n  return new Date(start + Math.random() * (end - start), generateRandomNumber(0, 11) , generateRandomNumber(1, 30));\n};\n\nconst generateRandomNumber = (start, end) => {\n  return Math.floor(start + Math.random() * (end - start));\n};\n\nconst isNightFlying = () => Math.random() > 0.5;\n\nconst generateTimes = () => {\n  const work = generateRandomNumber(TimeFlight.START, TimeFlight.END);\n  const block = work - Time.PREFLIGHT - Time.POSTFLIGHT;\n  const flight = block - Time.MOVE_ON_GROUND;\n\n  let night = 0;\n  let biologicalNight = 0;\n  if (isNightFlying()) {\n    night = flight - generateRandomNumber(0, flight);\n    biologicalNight = night;\n  }\n\n  return {work, block, flight, night, biologicalNight}\n};\n\nconst generateFlight = () => {\n  const time = generateTimes();\n  return {\n    'dateFlight': generateRandomDate(FlightDate.START, FlightDate.END),\n    'flight': generateRandomNumber(FlightNumber.START, FlightNumber.END),\n    'plnType': PlaneType[generateRandomNumber(0, PlaneType.length)],\n    'pln': `${generateRandomNumber(PlaneNumber.START, PlaneNumber.END)}AK`,\n    'timeFlight': time.flight,\n    'timeBlock': time.block,\n    'timeNight': time.night,\n    'timeBiologicalNight': time.biologicalNight,\n    'timeWork': time.work,\n    'type': Math.random() > 0.5,\n    'takeoff': {\n      'name': 'Томск(Богашево)',\n      'lat': 56.38333333,\n      'long': 85.2\n    },\n    'landing': {\n      'name': 'Нячанг(Камрань Интл)',\n      'lat': 11.99805555,\n      'long': 109.21944444\n    }\n  };\n};\n\nexport const generateFlights = () => {\n  const flights = [];\n  for (let index = 0; index < FLIGHT_COUNT; index++) {\n    flights.push(generateFlight());\n  }\n  return flights;\n;}\n","export const AppRoute = {\n  MAIN: \"/\",\n  DETAILS: \"/details\",\n};\n\nexport const StatisticType = {\n  YEARS: \"YEARS\",\n  MONTHS: \"MONTHS\",\n};\n\nexport const months = [\n  \"JAN\",\n  \"FEB\",\n  \"MAR\",\n  \"APR\",\n  \"MAY\",\n  \"JUN\",\n  \"JUL\",\n  \"AUG\",\n  \"SEP\",\n  \"OCT\",\n  \"NOV\",\n  \"DEC\",\n];\n","import { createSelector } from \"reselect\";\nimport { StatisticType, months } from \"../const\";\nimport { NameSpace } from \"./reducers/root\";\n\nconst Interval = {\n  MONTH: (date) => date.getMonth(),\n  YEAR: (date) => date.getFullYear(),\n};\n\nconst sortByDate = (flightA, flightB) => {\n  if (flightA.dateFlight - flightB.dateFlight > 0) {\n    return 1;\n  }\n\n  if (flightA.dateFlight - flightB.dateFlight < 0) {\n    return -1;\n  }\n\n  return 0;\n};\n\nconst groupByYears = (flights, statisticType) => {\n  return flights.reduce((result, flight) => {\n    const year = Interval[statisticType](flight.dateFlight);\n    result[year] = result[year] || [];\n    result[year].push(flight);\n    return result;\n  }, {});\n};\n\nconst groupByMonths = (flightsByYears, statisticType, year) => {\n  const Month = months.reduce((result, month) => {\n    result[month] = [];\n    return result;\n  }, {});\n\n  return flightsByYears[year].reduce((MonthMap, flight) => {\n    const monthName = months[Interval[statisticType](flight.dateFlight)];\n    MonthMap[monthName].push(flight);\n\n    return MonthMap;\n  }, Month);\n};\n\nconst filterByActual = (flights) => {\n  return flights.filter((flight) => !flight.type);\n};\n\nconst filterByPlanned = (flights) => {\n  return flights.filter((flight) => !!flight.type);\n};\n\nconst convertToChartData = (flights, statisticType) => {\n  const years = Object.keys(flights);\n  switch (statisticType) {\n    case StatisticType.YEARS:\n      return years.reduce((statisticByYears, year) => {\n        const yearStatistic = flights[year].reduce(\n          (time, flight) => {\n            time.timeFlight += flight.timeFlight || 0;\n            time.timeWork += flight.timeWork || 0;\n            return time;\n          },\n          { timeFlight: 0, timeWork: 0, name: year }\n        );\n\n        statisticByYears.push(yearStatistic);\n        return statisticByYears;\n      }, []);\n\n    case StatisticType.MONTHS:\n      return months.reduce((statisticByMonths, month) => {\n        const monthStatistic = flights[month].reduce(\n          (time, flight) => {\n            time.timeFlight += flight.timeFlight || 0;\n            time.timeWork += flight.timeWork || 0;\n            return time;\n          },\n          { timeFlight: 0, timeWork: 0, name: month }\n        );\n        statisticByMonths.push(monthStatistic);\n        return statisticByMonths;\n      }, []);\n\n    default:\n      return flights;\n  }\n};\n\nconst getGroupedData = (flights, statisticType, filter) => {\n  const flightsByYears = groupByYears(flights, \"YEAR\");\n  const result =\n    statisticType === StatisticType.YEARS\n      ? flightsByYears\n      : groupByMonths(flightsByYears, \"MONTH\", filter);\n  const convertedFlights = convertToChartData(result, statisticType);\n  return convertedFlights;\n};\n\nconst convertSecToHours = (sec) => Math.floor(sec / 3600);\n\nconst getAllData = (actualChartData, plannedChartData) => {\n  if (\n    Object.keys(actualChartData).length &&\n    Object.keys(plannedChartData).length\n  ) {\n    const years = new Set();\n    actualChartData.forEach((flight) => {\n      years.add(flight.name);\n    });\n    plannedChartData.forEach((flight) => {\n      years.add(flight.name);\n    });\n\n    const allData = [...years].reduce((result, year) => {\n      const statisctic = {};\n      const actualFlight = actualChartData.filter((data) => data.name === year);\n      const plannedFlight = plannedChartData.filter(\n        (data) => data.name === year\n      );\n      if (actualFlight.length) {\n        statisctic.actualTimeFlight = convertSecToHours(\n          actualFlight[0].timeFlight\n        );\n        statisctic.actualTimeWork = convertSecToHours(actualFlight[0].timeWork);\n      }\n      if (plannedFlight.length) {\n        statisctic.plannedTimeFlight = convertSecToHours(\n          plannedFlight[0].timeFlight\n        );\n        statisctic.plannedTimeWork = convertSecToHours(\n          plannedFlight[0].timeWork\n        );\n      }\n      statisctic.name = year;\n      result.push(statisctic);\n      return result;\n    }, []);\n    return allData;\n  }\n};\n\nexport const getChartData = createSelector(\n  (state) => state[NameSpace.FLIGHTS].flights,\n  (state) => state[NameSpace.STATISTIC].statisticType,\n  (state) => state[NameSpace.STATISTIC].filter,\n  (flights, statisticType, filter) => {\n    const filteredActualFlights = filterByActual(flights);\n    const filteredPlannedFlights = filterByPlanned(flights);\n    const actualChartData = getGroupedData(\n      filteredActualFlights,\n      statisticType,\n      filter\n    );\n    const plannedChartData = getGroupedData(\n      filteredPlannedFlights,\n      statisticType,\n      filter\n    );\n    const allData = getAllData(actualChartData, plannedChartData) || [];\n    return allData;\n  }\n);\n\nexport const getYears = createSelector(\n  (state) => state[NameSpace.FLIGHTS].flights,\n  (flights) => {\n    const flightsByYears = groupByYears(flights, \"YEAR\");\n    const years = Object.keys(flightsByYears);\n    return years;\n  }\n);\n\nconst findNextFlight = (flights) => {\n  const currentDate = new Date();\n  const [year, month] = [\n    currentDate.getFullYear(),\n    months[currentDate.getMonth()],\n  ];\n  const flightsByYears = groupByYears(flights, \"YEAR\");\n  const flightsByMonths = groupByMonths(flightsByYears, \"MONTH\", year);\n  const dayX = flightsByMonths[month]\n    .filter((flight) => flight.dateFlight > currentDate)\n    .sort(sortByDate)\n    .slice(-1)[0];\n\n  return dayX;\n};\n\nexport const getNextFlight = (flights) => {\n  const filteredPlannedFlights = filterByPlanned(flights);\n  const nextFlight = findNextFlight(filteredPlannedFlights);\n  return nextFlight;\n};\n","import { generateFlights } from \"../../../mock/flights\";\nimport { ActionType } from \"../../action\";\nimport {getNextFlight} from \"../../selectors\";\n\nconst initialState = {\n  flights: [],\n  isFlightsLoaded: false,\n  nextFlight: {}\n};\n\nexport const flightsData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.LOAD_FLIGHTS:\n      const flights = generateFlights();\n      const nextFlight = getNextFlight(flights);\n      return { ...state, flights, isFlightsLoaded: true, nextFlight: nextFlight};\n\n    default:\n      return state;\n  }\n};\n","import { ActionType } from \"../../action\";\nimport { StatisticType } from \"../../../const\";\n\nconst initialState = {\n  statisticType: StatisticType.YEARS,\n  filter: new Date().getFullYear()\n};\n\nexport const statisticData = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.CHANGE_STATISTIC_TYPE:\n      return { ...state, statisticType: action.payload };\n    case ActionType.CHANGE_FILTER:\n        return { ...state, filter: action.payload };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { flightsData } from \"./flights/flights\";\nimport {statisticData} from \"./statistic/statistic\";\n\nexport const NameSpace = {\n  FLIGHTS: `FLIGHTS`,\n  STATISTIC: `STATISTIC`\n};\n\nexport default combineReducers({\n  [NameSpace.FLIGHTS]: flightsData,\n  [NameSpace.STATISTIC]: statisticData\n});\n","import React from \"react\";\nimport { Typography, Avatar, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: \"13px\",\n  },\n  userName: {\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst User = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={5}\n      wrap=\"nowrap\"\n      alignContent=\"space-between\"\n      item\n      className={classes.root}\n    >\n      <Grid item>\n        <Avatar\n          alt=\"Sheldon Cooper\"\n          style={{ width: \"60px\", height: \"60px\" }}\n          src=\"./img/avatar.jpg\"\n        />\n      </Grid>\n      <Grid container alignItems=\"center\" item>\n        <Grid item>\n          <Typography className={classes.userName} variant=\"body1\">\n            Шелдон Купер\n          </Typography>\n          <Typography className={classes.userMail} variant=\"body2\">\n            sheldon.cooper@gmail.com\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport {\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  TableBody,\n  TableRow,\n  TableCell,\n  Table,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport {months} from \"../../const\";\n\nconst useStyles = makeStyles({\n  grid: {\n    width: \"100%\",\n    borderBottom: \"1px solid rgba(16, 66, 195, 0.15)\",\n    paddingBottom: \"24px\",\n  },\n  card: {\n    boxShadow: \"none\",\n  },\n  plane: {\n    marginBottom: \"15px\",\n  },\n  row: {\n    marginBottom: \"13px\",\n  },\n  th: {\n    border: \"none\",\n    paddingLeft: 0,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    color: \"#000000\",\n    fontWeight: 700,\n  },\n  td: {\n    border: \"none\",\n    paddingRight: 0,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n});\n\nconst createData = (name, data) => {\n  return { name, data };\n};\n\nconst NextFlight = ({ nextFlight }) => {\n  const classes = useStyles();\n\n  let date = \"\";\n  let flightNumber = \"\";\n  let plnType = \"\";\n  let pln = \"\";\n  if (Object.keys(nextFlight).length) {\n    date = `${nextFlight.dateFlight.toLocaleTimeString().slice(0, 5)} ${nextFlight.dateFlight.getDate()} ${months[nextFlight.dateFlight.getMonth()]} ${nextFlight.dateFlight.getFullYear()}`;\n    flightNumber = nextFlight.flight;\n    plnType = nextFlight.plnType;\n    pln = nextFlight.pln;\n  }\n\n  const rows = [\n    createData(\"Дата рейса\", date),\n    createData(\"Номер рейса\", flightNumber),\n    createData(\"Тип воздушного судна\", plnType),\n    createData(\"Бортовой номер судна\", pln),\n  ];\n\n  return (\n    <Grid item className={classes.grid}>\n      <Card className={classes.card}>\n        <CardMedia\n          component=\"img\"\n          alt=\"Plane type\"\n          width=\"257\"\n          height=\"89\"\n          image=\"./img/plane.png\"\n          title=\"Plane type\"\n          className={classes.plane}\n        />\n      </Card>\n      <CardContent style={{ padding: 0 }}>\n        <Table>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.name} className={classes.row}>\n                <Grid container justify=\"space-between\">\n                  <TableCell\n                    component=\"th\"\n                    variant=\"head\"\n                    className={classes.th}\n                  >\n                    {row.name}\n                  </TableCell>\n\n                  <TableCell\n                    variant=\"body\"\n                    className={classes.td}\n                    align=\"right\"\n                  >\n                    {row.data}\n                  </TableCell>\n                </Grid>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  nextFlight: state[NameSpace.FLIGHTS].nextFlight,\n});\n\nexport default connect(mapStateToProps)(NextFlight);\n","import React from \"react\";\nimport {\n  Typography,\n  Grid,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    boxSizing: \"content-box\",\n    boxShadow: \"none\",\n    maxWidth: \"100%\"\n  },\n  accordionItem: {\n    padding: \"0\",\n  },\n  label: {\n    fontWeight: 700\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n  expandIcon: {\n    position: \"relative\",\n    color: \"#4e85f5\",\n  }\n});\n\nconst AccordionContainer = ({ children, renderDetails }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item>\n      <Accordion className={classes.root}>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon className={classes.expandIcon}  />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          className={classes.accordionItem}\n        >\n          <Typography className={classes.label}>{children}</Typography>\n        </AccordionSummary>\n        <AccordionDetails className={classes.accordionItem}>{renderDetails()}</AccordionDetails>\n      </Accordion>\n    </Grid>\n  );\n};\n\nexport default AccordionContainer;\n","import React, { useState } from \"react\";\nimport { Switch, Typography, Grid, Container } from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  labelFont: {\n    padding: \"5px\",\n    fontSize: \"12px\",\n    fontWeight: 700,\n    borderRadius: \"5px\"\n  },\n  gridItem: {\n    flexBasis: \"33%\",\n    width: \"33%\",\n    flexGrow: \"1\"\n  }\n});\n\nconst BlueSwitch = withStyles({\n  switchBase: {\n    color: \"#4e85f5\",\n    margin: \"0 auto\"\n  },\n  checked: {},\n  track: { backgroundColor: \"#4e85f5\" },\n})(Switch);\n\nconst Toggle = ({ changeHandler, labels }) => {\n  const classes = useStyles();\n  const [leftLabel, rightLabel] = labels;\n\n  const [state, setState] = useState({\n    checkedA: false,\n  });\n\n  const handleChange = (evt) => {\n    setState({ ...state, [evt.target.name]: evt.target.checked });\n    changeHandler();\n  };\n\n  return (\n    <Container style={{padding: \"0\"}}>\n      <Grid component=\"label\" container justify=\"space-between\" alignItems=\"center\">\n        <Grid item className={classes.gridItem} style={{textAlign: \"right\"}}>\n          <Typography\n            className={classes.labelFont}\n            style={!state.checkedA ? { border: \"2px solid #4e85f5\", padding: \"3px\",} : {}}\n            component=\"p\"\n          >\n            {leftLabel}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <BlueSwitch\n            checked={state.checkedA}\n            onChange={handleChange}\n            name=\"checkedA\"\n            inputProps={{ \"aria-label\": \"statistic type toggle\" }}\n            className={classes.switchBase}\n          />\n        </Grid>\n        <Grid item className={classes.gridItem}>\n          <Typography\n            className={classes.labelFont}\n            style={state.checkedA ? { border: \"2px solid #4e85f5\", padding: \"3px\"  } : {}}\n            component=\"p\"\n          >\n            {rightLabel}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Toggle;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Typography,\n  Grid,\n  Container,\n} from \"@material-ui/core\";\nimport { ActionCreator } from \"../../store/action\";\nimport { getYears } from \"../../store/selectors\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    justifyContent: `space-between`,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    background: `#ffffff`,\n  },\n  select: {\n    color: `black`,\n    height: `20px`,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SimpleSelect = ({ filter, setFilter, years }) => {\n  const classes = useStyles();\n\n  const handleChange = (evt) => {\n    setFilter(evt.target.value);\n  };\n\n  return (\n    <Container style={{padding: \"0\"}}>\n      <Grid container className={classes.grid}>\n        <Typography component=\"p\">Выберите год</Typography>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select\n            className={classes.select}\n            labelId=\"select-label\"\n            id=\"select-outlined\"\n            value={filter}\n            defaultValue={filter}\n            onChange={handleChange}\n            label=\"Year\"\n          >\n            {years.map((year) => (\n              <MenuItem value={year}>{year}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  year: state[NameSpace.STATISTIC].filter,\n  years: getYears(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFilter(filter) {\n    dispatch(ActionCreator.changeFilter(filter));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleSelect);\n","import React, {useCallback, useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport {getChartData} from \"../../store/selectors\";\nimport Toggle from \"../toggle/toggle\";\nimport {Grid} from \"@material-ui/core\";\nimport {ActionCreator} from \"../../store/action\";\nimport {StatisticType} from \"../../const\";\nimport Select from \"../select/select\";\n\nconst times = [\"Время работы\", \"Время налёта\"];\nconst intervals = [\"Годы\", \"Месяцы\"];\n\nconst Chart = ({chartData, toggleStatisticType}) => {\n  const [isTimeToggled, setTimeToggle] = useState(false);\n  const [isStatisticTypeToggled, setStatisticToggle] = useState(false);\n  const bootomGap = isStatisticTypeToggled ? {marginBottom: \"0\"} : {marginBottom: \"30px\"};\n\n  const handleChangeToggle = useCallback(() => {\n    setTimeToggle(!isTimeToggled);\n  }, [isTimeToggled]);\n\n  const handleStatisticToggle = useCallback(() => {\n    setStatisticToggle(!isStatisticTypeToggled);\n  }, [isStatisticTypeToggled]);\n\n  useEffect(() => {\n    toggleStatisticType(\n      isStatisticTypeToggled ? StatisticType.MONTHS : StatisticType.YEARS\n    );\n  }, [isStatisticTypeToggled, toggleStatisticType]);\n\n  return (\n    <Grid container>\n      <Toggle changeHandler={handleStatisticToggle} labels={intervals} />\n      <Toggle style={bootomGap} changeHandler={handleChangeToggle} labels={times} />\n      <Grid item style={{padding: \"10px 0\", minHeight: \"50px\", minWidth: \"100%\"}}>\n        {isStatisticTypeToggled && <Select />}\n      </Grid>\n\n      <div style={{width: \"100%\", height: \"250px\", left: \"-20px\", bottom: \"-20px\"}}>\n        <ResponsiveContainer>\n          <BarChart width=\"100%\" height=\"100%\" data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Legend verticalAlign=\"bottom\" height={50} />\n            {isTimeToggled && (\n              <Bar\n                barSize={10}\n                dataKey=\"actualTimeFlight\"\n                name=\"Фактическое время налета\"\n                stackId=\"a\"\n                fill=\"rgb(78, 133, 245)\"\n              />\n            )}\n            {isTimeToggled && (\n              <Bar\n                barSize={10}\n                dataKey=\"plannedTimeFlight\"\n                name=\"Плановое время налета\"\n                stackId=\"a\"\n                fill=\"rgba(78, 133, 245, 0.6)\"\n              />\n            )}\n            {!isTimeToggled && (\n              <Bar\n                barSize={10}\n                dataKey=\"actualTimeWork\"\n                name=\"Фактическое время работы\"\n                stackId=\"a\"\n                fill=\"rgb(78, 133, 245)\"\n              />\n            )}\n            {!isTimeToggled && (\n              <Bar\n                barSize={10}\n                dataKey=\"plannedTimeWork\"\n                name=\"Плановое время работы\"\n                stackId=\"a\"\n                fill=\"rgba(78, 133, 245, 0.6)\"\n              />\n            )}\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </Grid>\n  );\n};\n\nChart.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  chartData: getChartData(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleStatisticType(type) {\n    dispatch(ActionCreator.changeStatisticType(type));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);\n","import React from \"react\";\nimport {\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport Chart from \"../chart/chart\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  label: {\n    color: \"#676565\",\n    fontWeight: 400,\n    fontSize: \"12px\"\n  },\n  userMail: {\n    color: \"#676565\",\n    fontWeight: 400,\n  },\n  expandIcon: {\n    position: \"relative\",\n    color: \"#4e85f5\",\n  }\n});\n\nconst FlightStatistic = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Typography className={classes.label}>\n        Общая статистика налета и рабочего времени\n      </Typography>\n      <Chart />\n    </Grid>\n  );\n};\n\nexport default FlightStatistic;\n","import React, { useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Container,\n  Box,\n  Typography,\n  useMediaQuery,\n  Grid,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppRoute } from \"../../const\";\nimport User from \"../user/user\";\nimport NextFlight from \"../next-flight/next-flight\";\nimport AccordionContainer from \"../accordion-container/accordion-container\";\nimport FlightStatistic from \"../flight-statistic/flight-statistic\";\n\nconst useStyles = makeStyles({\n  header: {\n    background: \"#4e85f5\",\n    padding: \"28px 0 8px 20px\"\n  },\n  main: {\n    padding: \"15px 20px 13px 20px\"\n  },\n});\n\nconst MainPage = ({ history }) => {\n  const classes = useStyles();\n  const matches = useMediaQuery(`(min-width: 600px)`);\n\n  return (\n    <>\n      <Box className={classes.header}>\n        <Container maxWidth=\"xs\">\n            <Typography\n              color=\"textPrimary\"\n              variant={matches ? \"h4\" : \"h5\"}\n              component=\"h1\"\n              gutterBottom\n            >\n              Профиль\n            </Typography>\n        </Container>\n      </Box>\n      <Box className={classes.main}>\n        <Grid container>\n          <User />\n          <NextFlight />\n          <AccordionContainer style={{width: \"350px\"}} renderDetails={() => <FlightStatistic />}>Статистика налёта</AccordionContainer>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Box, Typography, useMediaQuery } from \"@material-ui/core\";\nimport Chart from \"../chart/chart\";\n\nconst DetailsPage = () => {\n  const matches = useMediaQuery(`(min-width: 600px)`);\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Box my={4} textAlign=\"center\">\n        <Typography variant={matches ? \"h4\" : \"h5\"} component=\"h2\" gutterBottom>\n          Детали\n        </Typography>\n        <Box minHeight=\"400px\">\n          <Chart my={4} />\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default DetailsPage;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { ActionCreator } from \"../../store/action\";\nimport { NameSpace } from \"../../store/reducers/root\";\nimport { AppRoute } from \"../../const\";\nimport MainPage from \"../main-page/main-page\";\nimport DetailsPage from \"../details-page/details-page\";\nimport { createMuiTheme, ThemeProvider, CssBaseline } from \"@material-ui/core\";\n\nconst App = ({ isFlightsLoaded, getFlights }) => {\n  const theme = createMuiTheme({\n    overrides: {\n      MuiCssBaseline: {\n        \"@global\": {\n          body: {\n            backgroundColor: \"#ffffff\"\n          },\n\n        },\n      },\n    },\n    palette: {\n      primary: {\n        main: \"#e5e5e5\",\n      },\n      secondary: {\n        main: \"#4e85f5\",\n      },\n      text: {\n        primary: \"#ffffff\",\n        secondary: \"#000000\",\n        third: \"#676565\",\n      },\n    },\n    background: {\n      default: \"#e5e5e5\",\n    },\n    typography: {\n      body1: {\n        fontWeight: 400,\n        color: \"#000000\",\n      },\n      body2: {\n        fontWeight: 700,\n        color: \"#676565\",\n      },\n      h5: {\n        fontWeight: 700,\n      },\n    },\n    spacing: 2,\n  });\n\n  useEffect(() => {\n    if (!isFlightsLoaded) {\n      getFlights();\n    }\n  }, [isFlightsLoaded, getFlights]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path={AppRoute.MAIN}\n            render={(props) => <MainPage history={props.history} />}\n          ></Route>\n          <Route exact path={AppRoute.DETAILS} render={() => <DetailsPage />} />\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n};\n\nApp.propTypes = {\n  isFlightsLoaded: PropTypes.bool.isRequired,\n  getFlights: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isFlightsLoaded: state[NameSpace.FLIGHTS].isFlightsLoaded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getFlights() {\n    dispatch(ActionCreator.loadFlights());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport App from \"./components/app/app\";\nimport root from \"./store/reducers/root\";\n\nconst store = createStore(root, composeWithDevTools());\n\nrender(\n  <Provider store={store}>\n\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}